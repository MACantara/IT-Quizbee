{
  "subtopic_id": "relationships",
  "subtopic_name": "Object Relationships",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What is the general term for any connection or relationship between two classes?",
      "answer": "Association",
      "alternatives": [],
      "explanation": "Association represents a general connection between classes where objects of one class are linked to objects of another. It describes a uses-a or knows-about relationship.",
      "id": "rela_rela_e_finals_000"
    },
    {
      "question": "What type of whole-part relationship allows the part to exist independently of the whole?",
      "answer": "Aggregation",
      "alternatives": [],
      "explanation": "Aggregation is a has-a relationship with shared ownership where parts can exist without the whole. Example: Department has Employees.",
      "id": "rela_rela_e_finals_001"
    },
    {
      "question": "What relationship type indicates strong ownership where the part cannot exist without the whole?",
      "answer": "Composition",
      "alternatives": [],
      "explanation": "Composition represents exclusive ownership where the part's lifecycle depends entirely on the whole. Example: House has Rooms.",
      "id": "rela_rela_e_finals_002"
    },
    {
      "question": "What relationship describes when one class temporarily uses another, often as a parameter?",
      "answer": "Dependency",
      "alternatives": [],
      "explanation": "Dependency is a uses-a relationship where one class depends on another temporarily through parameters, local variables, or return types.",
      "id": "rela_rela_e_finals_003"
    },
    {
      "question": "What relationship type is represented by 'has-a' in object-oriented design?",
      "answer": "Aggregation",
      "alternatives": [
        "Composition"
      ],
      "explanation": "Has-a relationships describe ownership connections. Both aggregation and composition are has-a relationships, with composition being the stronger form.",
      "id": "rela_rela_e_finals_004"
    },
    {
      "question": "What term describes when one class depends on another class temporarily?",
      "answer": "Uses-a",
      "alternatives": [
        "Dependency"
      ],
      "explanation": "Uses-a describes dependency relationships where one class uses another temporarily without maintaining a persistent reference.",
      "id": "rela_rela_e_finals_005"
    },
    {
      "question": "What specification indicates how many instances can participate in a relationship?",
      "answer": "Multiplicity",
      "alternatives": [
        "Cardinality"
      ],
      "explanation": "Multiplicity defines the number of instances involved in relationships, expressed as notations like 1, *, 0..1, or 1..*.",
      "id": "rela_rela_e_finals_006"
    },
    {
      "question": "What term describes the number of objects that can be associated in a relationship?",
      "answer": "Cardinality",
      "alternatives": [
        "Multiplicity"
      ],
      "explanation": "Cardinality specifies the number of instances participating in relationships. Common types include one-to-one, one-to-many, and many-to-many.",
      "id": "rela_rela_e_finals_007"
    },
    {
      "question": "What UML feature shows the direction in which a relationship can be traversed?",
      "answer": "Navigability",
      "alternatives": [],
      "explanation": "Navigability indicates which class holds references to the other, shown by arrows in UML diagrams. It determines how objects can access related objects.",
      "id": "rela_rela_e_finals_008"
    },
    {
      "question": "What term describes the entity containing other entities in a whole-part relationship?",
      "answer": "Whole",
      "alternatives": [
        "Container",
        "Owner"
      ],
      "explanation": "In aggregation and composition relationships, the whole is the container entity that has parts. The diamond symbol in UML is placed on the whole side.",
      "id": "rela_rela_e_finals_009"
    }
  ]
}