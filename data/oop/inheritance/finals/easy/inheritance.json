{
  "subtopic_id": "inheritance",
  "subtopic_name": "Inheritance",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What is the class that gives properties to another class?",
      "answer": "parent class",
      "alternatives": [
        "base class",
        "superclass",
        "super class"
      ],
      "explanation": "The parent class provides features to derived classes.",
      "id": "inhe_inhe_e_finals_000"
    },
    {
      "question": "What is the class that receives properties from another class?",
      "answer": "child class",
      "alternatives": [
        "derived class",
        "subclass",
        "sub class"
      ],
      "explanation": "The child class inherits features from the parent class.",
      "id": "inhe_inhe_e_finals_001"
    },
    {
      "question": "What Java keyword establishes inheritance?",
      "answer": "extends",
      "alternatives": [
        "Extends"
      ],
      "explanation": "The extends keyword creates inheritance relationships.",
      "id": "inhe_inhe_e_finals_002"
    },
    {
      "question": "What Python function calls parent class methods?",
      "answer": "super",
      "alternatives": [
        "super()"
      ],
      "explanation": "Super() accesses methods from the parent class.",
      "id": "inhe_inhe_e_finals_003"
    },
    {
      "question": "What relationship does inheritance represent?",
      "answer": "is-a",
      "alternatives": [
        "is a",
        "is-a relationship"
      ],
      "explanation": "Inheritance models an is-a relationship between classes.",
      "id": "inhe_inhe_e_finals_004"
    },
    {
      "question": "What type of inheritance has one parent and one child?",
      "answer": "single inheritance",
      "alternatives": [
        "single"
      ],
      "explanation": "Single inheritance involves direct parent-child relationship.",
      "id": "inhe_inhe_e_finals_005"
    },
    {
      "question": "What type of inheritance has multiple levels?",
      "answer": "multilevel inheritance",
      "alternatives": [
        "multilevel",
        "multi-level inheritance"
      ],
      "explanation": "Multilevel inheritance creates a chain of inheritance.",
      "id": "inhe_inhe_e_finals_006"
    },
    {
      "question": "What benefit does inheritance provide?",
      "answer": "code reusability",
      "alternatives": [
        "reusability",
        "code reuse"
      ],
      "explanation": "Inheritance allows sharing code across related classes.",
      "id": "inhe_inhe_e_finals_007"
    },
    {
      "question": "What can child classes add to inherited features?",
      "answer": "additional features",
      "alternatives": [
        "new features",
        "extra features"
      ],
      "explanation": "Child classes extend parent functionality with new members.",
      "id": "inhe_inhe_e_finals_008"
    },
    {
      "question": "What C++ symbol indicates inheritance?",
      "answer": "colon",
      "alternatives": [
        ":",
        "colon operator"
      ],
      "explanation": "C++ uses a colon to specify base class in inheritance.",
      "id": "inhe_inhe_e_finals_009"
    }
  ]
}