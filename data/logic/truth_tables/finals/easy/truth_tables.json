{
  "subtopic_id": "truth_tables",
  "subtopic_name": "Truth Tables",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What shows all possible truth value combinations?",
      "answer": "truth table",
      "alternatives": [],
      "explanation": "Truth tables enumerate all cases."
    },
    {
      "question": "How many rows for n variables?",
      "answer": "2^n",
      "alternatives": ["2 to the power of n"],
      "explanation": "Each variable doubles the rows."
    },
    {
      "question": "What column shows the final result?",
      "answer": "main connective column",
      "alternatives": ["output column", "result column"],
      "explanation": "Main connective is the final output."
    },
    {
      "question": "What identifies the outermost operator?",
      "answer": "main connective",
      "alternatives": ["principal connective"],
      "explanation": "Main connective is evaluated last."
    },
    {
      "question": "What has all true values?",
      "answer": "tautology",
      "alternatives": [],
      "explanation": "Tautologies are always true."
    },
    {
      "question": "What has all false values?",
      "answer": "contradiction",
      "alternatives": [],
      "explanation": "Contradictions are always false."
    },
    {
      "question": "What verifies logical equivalence?",
      "answer": "truth table",
      "alternatives": ["truth table comparison"],
      "explanation": "Compare columns to check equivalence."
    },
    {
      "question": "How many rows for 1 variable?",
      "answer": "2",
      "alternatives": [],
      "explanation": "One variable has 2 truth values."
    },
    {
      "question": "What lists input combinations?",
      "answer": "truth table rows",
      "alternatives": ["rows"],
      "explanation": "Each row is one combination."
    },
    {
      "question": "What evaluates compound propositions?",
      "answer": "truth table",
      "alternatives": [],
      "explanation": "Truth tables compute all cases."
    }
  ]
}