{
  "subtopic_id": "instruction_set",
  "subtopic_name": "Instruction Set Architecture",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What does RISC stand for?",
      "answer": "Reduced Instruction Set Computer",
      "alternatives": ["Reduced Instruction Set Computing"],
      "explanation": "RISC is a CPU design strategy that uses a small, optimized set of simple instructions."
    },
    {
      "question": "What does CISC stand for?",
      "answer": "Complex Instruction Set Computer",
      "alternatives": ["Complex Instruction Set Computing"],
      "explanation": "CISC processors use a large set of complex instructions capable of multi-step operations."
    },
    {
      "question": "What does ISA stand for?",
      "answer": "Instruction Set Architecture",
      "alternatives": [],
      "explanation": "ISA defines the set of instructions and their format that a processor can execute."
    },
    {
      "question": "What part of an instruction specifies the operation to perform?",
      "answer": "Opcode",
      "alternatives": ["Operation code"],
      "explanation": "The opcode tells the processor what operation to execute, such as ADD or LOAD."
    },
    {
      "question": "What architecture is ARM based on?",
      "answer": "RISC",
      "alternatives": ["Reduced Instruction Set Computer"],
      "explanation": "ARM processors use RISC architecture for efficiency and low power consumption."
    },
    {
      "question": "What architecture is x86 based on?",
      "answer": "CISC",
      "alternatives": ["Complex Instruction Set Computer"],
      "explanation": "x86 processors from Intel and AMD use CISC architecture with many complex instructions."
    },
    {
      "question": "What addressing mode includes data directly in the instruction?",
      "answer": "Immediate addressing",
      "alternatives": ["Immediate mode"],
      "explanation": "Immediate addressing embeds the actual data value within the instruction itself."
    },
    {
      "question": "What are the values that an instruction operates on called?",
      "answer": "Operands",
      "alternatives": [],
      "explanation": "Operands are the data values or addresses that instructions manipulate."
    },
    {
      "question": "What type of instruction length does RISC typically use?",
      "answer": "Fixed-length",
      "alternatives": ["Fixed", "Fixed length", "Uniform length"],
      "explanation": "RISC uses fixed-length instructions to simplify decoding and improve pipeline efficiency."
    },
    {
      "question": "What addressing mode uses a register's content as a memory address?",
      "answer": "Register indirect addressing",
      "alternatives": ["Indirect addressing", "Register indirect"],
      "explanation": "Register indirect addressing treats the register's value as a pointer to the actual data in memory."
    }
  ]
}