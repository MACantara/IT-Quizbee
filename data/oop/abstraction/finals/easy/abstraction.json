{
  "subtopic_id": "abstraction",
  "subtopic_name": "Abstraction",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What does abstraction hide?",
      "answer": "complexity",
      "alternatives": [
        "implementation details",
        "details"
      ],
      "explanation": "Abstraction simplifies by hiding unnecessary details.",
      "id": "abst_abst_e_finals_000"
    },
    {
      "question": "What class cannot be instantiated?",
      "answer": "abstract class",
      "alternatives": [
        "abstract"
      ],
      "explanation": "Abstract classes serve as templates only.",
      "id": "abst_abst_e_finals_001"
    },
    {
      "question": "What method has no implementation?",
      "answer": "abstract method",
      "alternatives": [
        "abstract"
      ],
      "explanation": "Abstract methods define contracts without code.",
      "id": "abst_abst_e_finals_002"
    },
    {
      "question": "What keyword declares abstract classes in Java?",
      "answer": "abstract",
      "alternatives": [
        "Abstract"
      ],
      "explanation": "Abstract keyword creates abstraction.",
      "id": "abst_abst_e_finals_003"
    },
    {
      "question": "What defines contracts without implementation?",
      "answer": "interface",
      "alternatives": [
        "interfaces"
      ],
      "explanation": "Interfaces specify what classes must do.",
      "id": "abst_abst_e_finals_004"
    },
    {
      "question": "What keyword applies interfaces to classes?",
      "answer": "implements",
      "alternatives": [
        "Implements"
      ],
      "explanation": "Implements keyword connects interfaces to classes.",
      "id": "abst_abst_e_finals_005"
    },
    {
      "question": "What must child classes do with abstract methods?",
      "answer": "implement",
      "alternatives": [
        "implement them",
        "provide implementation"
      ],
      "explanation": "Child classes must define abstract method bodies.",
      "id": "abst_abst_e_finals_006"
    },
    {
      "question": "How many interfaces can Java classes implement?",
      "answer": "multiple",
      "alternatives": [
        "many",
        "several"
      ],
      "explanation": "Classes can implement multiple interfaces.",
      "id": "abst_abst_e_finals_007"
    },
    {
      "question": "What Python module provides abstract base classes?",
      "answer": "abc",
      "alternatives": [
        "ABC"
      ],
      "explanation": "ABC module enables abstraction in Python.",
      "id": "abst_abst_e_finals_008"
    },
    {
      "question": "What benefit does abstraction provide?",
      "answer": "simplification",
      "alternatives": [
        "simplicity",
        "reduced complexity"
      ],
      "explanation": "Abstraction makes systems easier to understand.",
      "id": "abst_abst_e_finals_009"
    }
  ]
}