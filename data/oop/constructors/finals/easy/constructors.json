{
  "subtopic_id": "constructors",
  "subtopic_name": "Constructors & Destructors",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What method initializes objects?",
      "answer": "constructor",
      "alternatives": [
        "constructors"
      ],
      "explanation": "Constructors set initial state when objects are created.",
      "id": "cons_cons_e_finals_000"
    },
    {
      "question": "What method cleans up before destruction?",
      "answer": "destructor",
      "alternatives": [
        "destructors"
      ],
      "explanation": "Destructors release resources when objects are destroyed.",
      "id": "cons_cons_e_finals_001"
    },
    {
      "question": "What constructor has no parameters?",
      "answer": "default constructor",
      "alternatives": [
        "default"
      ],
      "explanation": "Default constructors require no arguments.",
      "id": "cons_cons_e_finals_002"
    },
    {
      "question": "What constructor accepts arguments?",
      "answer": "parameterized constructor",
      "alternatives": [
        "parameterized"
      ],
      "explanation": "Parameterized constructors allow custom initialization.",
      "id": "cons_cons_e_finals_003"
    },
    {
      "question": "What constructor copies existing objects?",
      "answer": "copy constructor",
      "alternatives": [
        "copy"
      ],
      "explanation": "Copy constructors create duplicates of objects.",
      "id": "cons_cons_e_finals_004"
    },
    {
      "question": "What symbol precedes C++ destructors?",
      "answer": "tilde",
      "alternatives": [
        "~"
      ],
      "explanation": "Tilde marks destructors in C++.",
      "id": "cons_cons_e_finals_005"
    },
    {
      "question": "What Python method initializes objects?",
      "answer": "__init__",
      "alternatives": [
        "init"
      ],
      "explanation": "__init__ is Python's constructor.",
      "id": "cons_cons_e_finals_006"
    },
    {
      "question": "What Python method destroys objects?",
      "answer": "__del__",
      "alternatives": [
        "del"
      ],
      "explanation": "__del__ is Python's destructor.",
      "id": "cons_cons_e_finals_007"
    },
    {
      "question": "How many destructors can classes have?",
      "answer": "one",
      "alternatives": [
        "1"
      ],
      "explanation": "Classes can have only one destructor.",
      "id": "cons_cons_e_finals_008"
    },
    {
      "question": "What do constructors share with their class?",
      "answer": "name",
      "alternatives": [
        "same name",
        "class name"
      ],
      "explanation": "Constructors have the same name as their class.",
      "id": "cons_cons_e_finals_009"
    }
  ]
}