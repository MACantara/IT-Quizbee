{
  "subtopic_id": "file_management",
  "subtopic_name": "File Management",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What organizes stored data?",
      "answer": "File system",
      "alternatives": [
        "Storage system"
      ],
      "explanation": "File system organizes data storage. Purpose: retrieve, store, manage files. Components: directories (folders), files, metadata. Examples: NTFS (Windows), ext4 (Linux), APFS (macOS). Hierarchy: tree structure. Benefits: organization, quick retrieval. Importance: core OS function."
    },
    {
      "question": "What holds executable code or data?",
      "answer": "File",
      "alternatives": [
        "Document"
      ],
      "explanation": "File: named collection of data/code. Types: text, binary, executable, image, video. Properties: name, location, size, permissions. Access: file system provides. Operations: create, read, write, delete. Organization: stored in directories. Standard: operating system manages."
    },
    {
      "question": "What containers hold related files?",
      "answer": "Directory",
      "alternatives": [
        "Folder"
      ],
      "explanation": "Directory: contains files and subdirectories. Organization: hierarchical structure. Root: top-level directory. Path: location representation (/home/user/documents). Navigation: move between directories. Benefits: organization, access control. Naming: naming conventions exist."
    },
    {
      "question": "What identifies file content type?",
      "answer": "File extension",
      "alternatives": [
        "File type"
      ],
      "explanation": "File extension: three-letter suffix (.txt, .exe, .pdf). Purpose: indicates content type. Association: OS links to applications. Examples: .doc (Word), .jpg (image), .mp3 (audio). Importance: determines how file opens. Danger: misleading extensions possible."
    },
    {
      "question": "What controls file access?",
      "answer": "Permissions",
      "alternatives": [
        "Access control"
      ],
      "explanation": "Permissions: read, write, execute access. Levels: user, group, others. Notation: rwxrwxrwx (UNIX/Linux). Enforcement: OS prevents unauthorized access. Changes: chmod command (Unix), properties dialog (Windows). Security: critical protection. Default: restrictive recommended."
    },
    {
      "question": "What describes file metadata?",
      "answer": "Attributes",
      "alternatives": [
        "Properties"
      ],
      "explanation": "Attributes: file characteristics (size, created date, modified date, owner). Inode: UNIX structure holding metadata. Extended: custom attributes possible. Viewing: file properties dialog. Importance: helps locate files. Organization: sort by date, size, etc."
    },
    {
      "question": "What moves files between locations?",
      "answer": "Cut and paste",
      "alternatives": [
        "Move operation"
      ],
      "explanation": "Cut/paste: move file to new location. Process: remove from source, add to destination. Alternative: drag and drop. Difference from copy: original deleted. Faster: same device (no data copy). Cross-device: effectively copy + delete."
    },
    {
      "question": "What creates file duplicate?",
      "answer": "Copy",
      "alternatives": [
        "Duplicate"
      ],
      "explanation": "Copy: creates file duplicate. Source: unchanged. Destination: new location with same content. Space: uses additional storage. Efficiency: for backups. Verification: ensure successful copy. Safety: test before deleting original."
    },
    {
      "question": "What removes unwanted files?",
      "answer": "Delete",
      "alternatives": [
        "Remove",
        "Erase"
      ],
      "explanation": "Delete: removes file access. Process: file removed from directory. Space: marked as free (recoverable if not overwritten). Recycle bin: staged delete (recoverable). Permanent: secure deletion overwrites data. Caution: permanent loss possible."
    },
    {
      "question": "What saves application work?",
      "answer": "Save",
      "alternatives": [
        "Write to disk"
      ],
      "explanation": "Save: writes data to persistent storage. Buffering: memory holds data before saving. Auto-save: periodic automatic saving. Backup: manual safety copies. Location: where file stored matters. Recovery: prevents work loss. Frequency: regular saving important."
    }
  ]
}