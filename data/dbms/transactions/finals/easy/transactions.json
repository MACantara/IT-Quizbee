{
  "subtopic_id": "transactions",
  "subtopic_name": "Transactions",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "A sequence of database operations that must be executed as a single unit of work.",
      "answer": "Transaction",
      "alternatives": [],
      "explanation": "A transaction is a logical unit of work that contains one or more database operations."
    },
    {
      "question": "The property that ensures all operations in a transaction complete successfully or none at all.",
      "answer": "Atomicity",
      "alternatives": [],
      "explanation": "Atomicity guarantees that transactions are all-or-nothing; partial completion is not allowed."
    },
    {
      "question": "The property that ensures the database moves from one valid state to another.",
      "answer": "Consistency",
      "alternatives": [],
      "explanation": "Consistency ensures that transaction execution maintains database integrity constraints."
    },
    {
      "question": "The property that ensures concurrent transactions don't interfere with each other.",
      "answer": "Isolation",
      "alternatives": [],
      "explanation": "Isolation prevents concurrent transactions from seeing each other's partial results."
    },
    {
      "question": "The property that ensures committed changes are permanent even after system failure.",
      "answer": "Durability",
      "alternatives": [],
      "explanation": "Durability guarantees that committed transactions survive system crashes."
    },
    {
      "question": "SQL command to make transaction changes permanent.",
      "answer": "COMMIT",
      "alternatives": [],
      "explanation": "COMMIT saves all changes made during a transaction to the database permanently."
    },
    {
      "question": "SQL command to undo all transaction changes.",
      "answer": "ROLLBACK",
      "alternatives": [],
      "explanation": "ROLLBACK reverses all operations performed in the current transaction."
    },
    {
      "question": "Reading uncommitted data from another transaction.",
      "answer": "Dirty read",
      "alternatives": [],
      "explanation": "A dirty read occurs when one transaction reads data that another transaction has modified but not yet committed."
    },
    {
      "question": "A marker within a transaction allowing partial rollback.",
      "answer": "Savepoint",
      "alternatives": [],
      "explanation": "A savepoint is a named point in a transaction to which you can later roll back."
    },
    {
      "question": "The strictest isolation level that prevents all anomalies.",
      "answer": "Serializable",
      "alternatives": [],
      "explanation": "Serializable is the highest isolation level, providing complete isolation between transactions."
    }
  ]
}