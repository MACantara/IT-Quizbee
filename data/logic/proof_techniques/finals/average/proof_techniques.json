{
  "subtopic_id": "proof_techniques",
  "subtopic_name": "Proof Techniques",
  "mode": "finals",
  "difficulty": "average",
  "questions": [
    {
      "question": "What is constructive proof?",
      "answer": "Explicitly constructing object",
      "alternatives": [
        "Constructive"
      ],
      "explanation": "Method: build witness. Purpose: existence with construction. Example: algorithm for solution. Advantage: computational content. Application: algorithms. Importance: technique. Contrast: non-constructive."
    },
    {
      "question": "What is non-constructive proof?",
      "answer": "Proving existence without construction",
      "alternatives": [
        "Existence proof"
      ],
      "explanation": "Method: show must exist without finding. Example: pigeonhole principle. Advantage: often simpler. Application: certain theorems. Controversy: constructivists object. Importance: technique."
    },
    {
      "question": "What is the pigeonhole principle?",
      "answer": "n+1 items in n boxes means shared box",
      "alternatives": [
        "Pigeonhole"
      ],
      "explanation": "Principle: by counting, must have repetition. Proof: contradiction. Example: 13 people, 12 months, shared month. Application: counting. Importance: powerful. Variants: generalized."
    },
    {
      "question": "What is structural induction?",
      "answer": "Induction on structure",
      "alternatives": [
        "Well-founded"
      ],
      "explanation": "Method: base on atomic, inductive on operations. Purpose: recursive structures. Example: tree theorems. Application: data structures. Importance: variant. Necessity: for non-numeric."
    },
    {
      "question": "What is well-founded induction?",
      "answer": "Induction on well-ordered set",
      "alternatives": [
        "Well-ordering"
      ],
      "explanation": "Method: on any well-ordered structure. Principle: no infinite descent. Example: lexicographic ordering. Application: termination. Importance: general. Generality: beyond naturals."
    },
    {
      "question": "What is the well-ordering principle?",
      "answer": "Every non-empty set has minimum",
      "alternatives": [
        "Well-ordering"
      ],
      "explanation": "Principle: total order property. Importance: natural numbers. Equivalence: equivalent to induction. Application: proof foundation. Implication: enables induction."
    },
    {
      "question": "What is mutual induction?",
      "answer": "Proving multiple properties together",
      "alternatives": [
        "Simultaneous induction"
      ],
      "explanation": "Method: prove multiple P, P, ... simultaneously. Purpose: interdependent. Example: even/odd properties. Application: related properties. Importance: technique. Advantage: captures dependencies."
    },
    {
      "question": "What is least counterexample?",
      "answer": "Minimal false instance",
      "alternatives": [
        "Smallest counterexample"
      ],
      "explanation": "Method: assume false, find minimum. Derivation: derive smaller false case. Contradiction: impossibility. Example: minimal counterexample minimal. Application: optimization. Importance: technique."
    },
    {
      "question": "What is vacuous truth?",
      "answer": "Statement true because premise false",
      "alternatives": [
        "Vacuous"
      ],
      "explanation": "Truth: pq true when p false. Counterintuitive: conditional seems empty. Application: edge cases. Importance: formal definition. Impact: affects reasoning."
    },
    {
      "question": "What is invariant?",
      "answer": "Property preserved through operations",
      "alternatives": [
        "Loop invariant"
      ],
      "explanation": "Invariant: condition always true. Purpose: prove correctness. Example: sum during computation. Application: algorithm verification. Importance: technique. Usage: program proof."
    }
  ]
}