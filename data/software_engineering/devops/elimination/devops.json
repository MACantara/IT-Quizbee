{
  "subtopic_id": "devops",
  "subtopic_name": "DevOps",
  "mode": "elimination",
  "questions": [
    {
      "question": "What practice automates the integration of code changes from multiple contributors?",
      "options": [
        "Continuous Deployment",
        "Continuous Integration",
        "Continuous Delivery",
        "Continuous Testing"
      ],
      "correct": 1,
      "explanation": "Continuous Integration (CI) automatically builds and tests code changes whenever developers commit to version control."
    },
    {
      "question": "What containerization platform packages applications with dependencies?",
      "options": [
        "Kubernetes",
        "Jenkins",
        "Docker",
        "Ansible"
      ],
      "correct": 2,
      "explanation": "Docker is a containerization platform that packages applications and their dependencies into portable containers."
    },
    {
      "question": "What orchestration system manages containerized applications?",
      "options": [
        "Docker",
        "Kubernetes",
        "Jenkins",
        "Git"
      ],
      "correct": 1,
      "explanation": "Kubernetes is a container orchestration platform that automates deployment, scaling, and management of containerized applications."
    },
    {
      "question": "What practice automatically deploys every change that passes tests to production?",
      "options": [
        "Continuous Integration",
        "Continuous Deployment",
        "Continuous Testing",
        "Continuous Monitoring"
      ],
      "correct": 1,
      "explanation": "Continuous Deployment automatically releases every change that passes all stages of the production pipeline."
    },
    {
      "question": "What automation server is commonly used for CI/CD pipelines?",
      "options": [
        "Git",
        "Docker",
        "Jenkins",
        "Ansible"
      ],
      "correct": 2,
      "explanation": "Jenkins is an open-source automation server used to build, test, and deploy applications in CI/CD pipelines."
    },
    {
      "question": "What practice manages infrastructure using code and version control?",
      "options": [
        "Infrastructure as Code",
        "Configuration as Code",
        "Platform as Code",
        "Service as Code"
      ],
      "correct": 0,
      "explanation": "Infrastructure as Code (IaC) manages and provisions infrastructure through machine-readable definition files rather than manual processes."
    },
    {
      "question": "What tool automates configuration management and application deployment?",
      "options": [
        "Docker",
        "Kubernetes",
        "Ansible",
        "Git"
      ],
      "correct": 2,
      "explanation": "Ansible is an automation tool for configuration management, application deployment, and task automation."
    },
    {
      "question": "What collects and analyzes data about application performance?",
      "options": [
        "Version Control",
        "Monitoring",
        "Testing",
        "Deployment"
      ],
      "correct": 1,
      "explanation": "Monitoring continuously collects metrics and logs to track application performance, availability, and health."
    },
    {
      "question": "What deployment strategy gradually rolls out changes to subset of users?",
      "options": [
        "Big Bang Deployment",
        "Canary Deployment",
        "Rolling Deployment",
        "Recreate Deployment"
      ],
      "correct": 1,
      "explanation": "Canary Deployment releases changes to a small subset of users before rolling out to everyone, reducing risk."
    },
    {
      "question": "What practice ensures code changes are always in a deployable state?",
      "options": [
        "Continuous Monitoring",
        "Continuous Testing",
        "Continuous Delivery",
        "Continuous Documentation"
      ],
      "correct": 2,
      "explanation": "Continuous Delivery ensures software can be reliably released at any time, keeping it in a production-ready state."
    }
  ]
}