{
  "subtopic_id": "sdlc",
  "subtopic_name": "Software Development Life Cycle",
  "mode": "elimination",
  "questions": [
    {
      "question": "Which SDLC phase involves gathering and documenting what the software should accomplish?",
      "options": [
        "Design",
        "Requirements Analysis",
        "Implementation",
        "Testing"
      ],
      "correct": 1,
      "explanation": "Requirements Analysis is the phase where stakeholder needs are gathered and documented to define what the software should do."
    },
    {
      "question": "In which SDLC model are all phases completed sequentially without overlap?",
      "options": [
        "Agile",
        "Waterfall",
        "Spiral",
        "Iterative"
      ],
      "correct": 1,
      "explanation": "The Waterfall model follows a linear sequential flow where each phase must be completed before the next begins."
    },
    {
      "question": "What is the primary focus of the maintenance phase in SDLC?",
      "options": [
        "Creating new features",
        "Initial deployment",
        "Bug fixes and updates",
        "Requirements gathering"
      ],
      "correct": 2,
      "explanation": "The maintenance phase focuses on fixing bugs, making updates, and ensuring the software continues to function properly after deployment."
    },
    {
      "question": "Which SDLC phase involves creating the architecture and technical specifications?",
      "options": [
        "Design",
        "Planning",
        "Testing",
        "Deployment"
      ],
      "correct": 0,
      "explanation": "The Design phase translates requirements into technical specifications, including system architecture, database design, and interface layouts."
    },
    {
      "question": "What does the implementation phase of SDLC primarily involve?",
      "options": [
        "Testing the software",
        "Writing code",
        "Gathering requirements",
        "Creating documentation"
      ],
      "correct": 1,
      "explanation": "Implementation is the coding phase where developers write the actual source code based on design specifications."
    },
    {
      "question": "Which SDLC model allows for risk assessment at each iteration?",
      "options": [
        "Waterfall",
        "V-Model",
        "Spiral",
        "Big Bang"
      ],
      "correct": 2,
      "explanation": "The Spiral model incorporates risk analysis in each iteration, making it suitable for large, complex projects with uncertain requirements."
    },
    {
      "question": "What is a key characteristic of the V-Model in SDLC?",
      "options": [
        "No testing phase",
        "Testing is paired with each development phase",
        "Only one iteration",
        "No design phase"
      ],
      "correct": 1,
      "explanation": "The V-Model pairs each development phase with a corresponding testing phase, emphasizing verification and validation throughout."
    },
    {
      "question": "In which phase is software released to the production environment?",
      "options": [
        "Deployment",
        "Testing",
        "Design",
        "Maintenance"
      ],
      "correct": 0,
      "explanation": "Deployment is when the tested software is released to the production environment for end-users."
    },
    {
      "question": "Which SDLC model is best suited for projects with unclear or evolving requirements?",
      "options": [
        "Waterfall",
        "Agile",
        "V-Model",
        "Big Bang"
      ],
      "correct": 1,
      "explanation": "Agile is ideal for projects with changing requirements as it allows for flexibility and iterative development with frequent feedback."
    },
    {
      "question": "What is the main purpose of the testing phase in SDLC?",
      "options": [
        "Writing documentation",
        "Verifying software meets requirements and is bug-free",
        "Designing the system",
        "Gathering user feedback for new features"
      ],
      "correct": 1,
      "explanation": "Testing verifies that the software functions correctly, meets requirements, and identifies bugs before deployment."
    }
  ]
}