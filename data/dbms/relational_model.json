{
  "subtopic_id": "relational_model",
  "subtopic_name": "Relational Model",
  "questions": [
    {
      "question": "Who proposed the relational model of databases?",
      "options": [
        "Bill Gates",
        "Edgar F. Codd",
        "Dennis Ritchie",
        "Linus Torvalds"
      ],
      "correct": 1,
      "explanation": "Edgar F. Codd, a computer scientist at IBM, proposed the relational model in 1970 in his paper 'A Relational Model of Data for Large Shared Data Banks.' This revolutionary model became the foundation for relational database management systems (RDBMS) and is still dominant today."
    },
    {
      "question": "In the relational model, data is organized into:",
      "options": [
        "Files and folders",
        "Trees and branches",
        "Tables (relations) with rows and columns",
        "Graphs and nodes"
      ],
      "correct": 2,
      "explanation": "In the relational model, data is organized into tables (also called relations). Each table consists of rows (tuples/records) and columns (attributes/fields). This simple, intuitive structure makes data easy to understand, query, and maintain while providing mathematical foundations for data operations."
    },
    {
      "question": "What is a tuple in the relational model?",
      "options": [
        "A column in a table",
        "A row (record) in a table",
        "A database constraint",
        "A type of query"
      ],
      "correct": 1,
      "explanation": "A tuple is a row or record in a table, representing a single entity instance. Each tuple contains values for all attributes (columns) defined in the table schema. For example, in an Employees table, one tuple might contain data for one employee: (101, 'John Smith', 'Sales', 50000)."
    },
    {
      "question": "What is an attribute in the relational model?",
      "options": [
        "A row in a table",
        "A column (field) in a table",
        "A database table",
        "A type of key"
      ],
      "correct": 1,
      "explanation": "An attribute is a column or field in a table, representing a property or characteristic of the entity. Each attribute has a name and data type (domain). For example, in a Students table, attributes might include StudentID, Name, Age, and Major. Attributes define what information is stored about each entity."
    },
    {
      "question": "What is a primary key?",
      "options": [
        "The first column in a table",
        "A unique identifier for each record in a table that cannot be NULL",
        "A password for database access",
        "The most important table in a database"
      ],
      "correct": 1,
      "explanation": "A primary key is a column (or combination of columns) that uniquely identifies each record in a table. Primary key values must be unique and cannot be NULL. They enforce entity integrity and are used to establish relationships with other tables. Examples: StudentID in Students table, OrderID in Orders table."
    },
    {
      "question": "What is a foreign key?",
      "options": [
        "A key from another database",
        "A column that references the primary key of another table, establishing relationships",
        "An encrypted key",
        "A backup key"
      ],
      "correct": 1,
      "explanation": "A foreign key is a column (or combination of columns) in one table that references the primary key of another table. It establishes and enforces relationships between tables, maintaining referential integrity. Example: CustomerID in Orders table referencing CustomerID (primary key) in Customers table."
    },
    {
      "question": "What is a candidate key?",
      "options": [
        "A temporary key",
        "Any column or combination of columns that can uniquely identify records",
        "A key waiting for approval",
        "A foreign key from another table"
      ],
      "correct": 1,
      "explanation": "A candidate key is any column or minimal combination of columns that can uniquely identify each record in a table. A table may have multiple candidate keys. One candidate key is chosen as the primary key; others become alternate keys. Example: In Students table, both StudentID and Email could be candidate keys."
    },
    {
      "question": "What is the domain of an attribute?",
      "options": [
        "The table name",
        "The set of allowed values for that attribute",
        "The primary key value",
        "The database name"
      ],
      "correct": 1,
      "explanation": "The domain of an attribute is the set of allowed values for that attribute - its data type and constraints. For example, Age attribute might have domain: positive integers 0-120, Gender might have domain: {'M', 'F', 'Other'}. Domains enforce data validity and type constraints."
    },
    {
      "question": "What is referential integrity?",
      "options": [
        "Ensuring data is encrypted",
        "Ensuring foreign key values match existing primary key values or are NULL",
        "Ensuring all tables have the same number of rows",
        "Ensuring data is backed up"
      ],
      "correct": 1,
      "explanation": "Referential integrity ensures that foreign key values in a table match existing primary key values in the referenced table (or are NULL if allowed). This maintains valid relationships between tables. For example, an OrderID with CustomerID=5 is valid only if Customer table has a record with CustomerID=5."
    },
    {
      "question": "What is a relation in the relational model?",
      "options": [
        "A connection between two databases",
        "A table with a specific structure (set of attributes) and constraints",
        "A type of SQL query",
        "A database user"
      ],
      "correct": 1,
      "explanation": "In the relational model, a relation is a table with a specific structure defined by its attributes (schema) and constraints. It's a set of tuples (rows) where each tuple conforms to the schema. Relations have unique names, have no duplicate rows, and the order of rows and columns is insignificant mathematically."
    }
  ]
}