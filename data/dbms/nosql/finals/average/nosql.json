{
  "subtopic_id": "nosql",
  "subtopic_name": "NoSQL Databases",
  "mode": "finals",
  "difficulty": "average",
  "questions": [
    {
      "question": "The property in CAP theorem that ensures all nodes see the same data at the same time.",
      "answer": "Consistency",
      "alternatives": [],
      "explanation": "Consistency means every read receives the most recent write or an error.",
      "id": "nosq_nosq_a_finals_000"
    },
    {
      "question": "The property in CAP theorem that ensures every request receives a response.",
      "answer": "Availability",
      "alternatives": [],
      "explanation": "Availability guarantees that every request gets a non-error response, though not necessarily the latest data.",
      "id": "nosq_nosq_a_finals_001"
    },
    {
      "question": "The property in CAP theorem about tolerating network failures.",
      "answer": "Partition tolerance",
      "alternatives": [],
      "explanation": "Partition tolerance means the system continues operating despite network partitions.",
      "id": "nosq_nosq_a_finals_002"
    },
    {
      "question": "A NoSQL model where data can have different structures within the same collection.",
      "answer": "Schema-less",
      "alternatives": [
        "Flexible schema"
      ],
      "explanation": "Schema-less or flexible schema allows documents to have varying structures without predefined schemas.",
      "id": "nosq_nosq_a_finals_003"
    },
    {
      "question": "The process of distributing data across multiple servers in NoSQL databases.",
      "answer": "Sharding",
      "alternatives": [],
      "explanation": "Sharding splits data across multiple machines to handle large datasets and high throughput.",
      "id": "nosq_nosq_a_finals_004"
    },
    {
      "question": "Storing multiple copies of data across different nodes for fault tolerance.",
      "answer": "Replication",
      "alternatives": [],
      "explanation": "Replication creates redundant copies of data to ensure availability and durability.",
      "id": "nosq_nosq_a_finals_005"
    },
    {
      "question": "A consistency model where updates eventually propagate to all replicas.",
      "answer": "Eventual consistency",
      "alternatives": [],
      "explanation": "Eventual consistency allows temporary inconsistencies but guarantees all replicas converge to the same value.",
      "id": "nosq_nosq_a_finals_006"
    },
    {
      "question": "The ability to add servers to handle increased load in NoSQL systems.",
      "answer": "Horizontal scaling",
      "alternatives": [
        "Scale-out"
      ],
      "explanation": "Horizontal scaling adds more machines to distribute load, unlike vertical scaling which upgrades a single machine.",
      "id": "nosq_nosq_a_finals_007"
    },
    {
      "question": "MongoDB query language for retrieving documents.",
      "answer": "MongoDB Query Language",
      "alternatives": [
        "MQL"
      ],
      "explanation": "MongoDB uses its own query language with JSON-like syntax for querying documents.",
      "id": "nosq_nosq_a_finals_008"
    },
    {
      "question": "In graph databases, the entities being stored.",
      "answer": "Nodes",
      "alternatives": [
        "Vertices"
      ],
      "explanation": "Nodes or vertices represent entities in a graph database.",
      "id": "nosq_nosq_a_finals_009"
    }
  ]
}