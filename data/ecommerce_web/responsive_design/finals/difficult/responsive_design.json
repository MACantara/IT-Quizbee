{
  "subtopic_id": "responsive_design",
  "subtopic_name": "Responsive Design",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What design paradigm prioritizes mobile?",
      "answer": "Mobile-first design",
      "alternatives": [
        "Mobile priority"
      ],
      "explanation": "Mobile-first design starts mobile, enhances desktop. Rationale: constraints force better UX. Media queries: min-width (progressively enhance). Performance: simpler initially, faster on mobile. Mindset: essential features work on all screens. Modern standard."
    },
    {
      "question": "What technique adapts image resolution?",
      "answer": "Adaptive images",
      "alternatives": [
        "Image optimization"
      ],
      "explanation": "Adaptive images load appropriate resolution. Techniques: srcset, picture element, responsive image library. Sizes: mobile-small, tablet-medium, desktop-large. Performance: mobile downloads smaller file. Progressive enhancement: fallback for unsupported browsers."
    },
    {
      "question": "What prevents content reflow?",
      "answer": "Aspect-ratio reservation",
      "alternatives": [
        "Layout shift prevention"
      ],
      "explanation": "Aspect-ratio reservation prevents layout shift. CSS: aspect-ratio property or padding-bottom technique. Reserve space: placeholder before content loads. CLS: Core Web Vital (minimize layout shifts). User experience: stable, predictable layout. Important: SEO ranking factor."
    },
    {
      "question": "What framework enables responsive layouts?",
      "answer": "CSS Grid",
      "alternatives": [
        "Grid layout"
      ],
      "explanation": "CSS Grid creates 2D responsive layouts. auto-fit, auto-fill: auto-create columns. minmax(): flexible sizing. Responsive: no media queries needed (often). Complex: powerful for modern layouts. Combines with media queries for fine-tuning."
    },
    {
      "question": "What technique provides optimal image sizes?",
      "answer": "Picture element",
      "alternatives": [
        "Responsive pictures"
      ],
      "explanation": "Picture element provides different images per condition. Syntax: <picture><source media=\"...\"><img></picture>. Scenarios: different aspect ratios, formats, sources. Browser chooses best. Use: art direction (different composition per device)."
    },
    {
      "question": "What performance metric affects responsiveness?",
      "answer": "Cumulative Layout Shift",
      "alternatives": [
        "CLS"
      ],
      "explanation": "Cumulative Layout Shift (CLS) measures layout stability. Unexpected shifts: low score. Prevent: reserve space (aspect-ratio), avoid late-loading. Core Web Vitals: impacts SEO ranking. Responsive design: contributes to good CLS. Monitor: Chrome DevTools."
    },
    {
      "question": "What container queries enable?",
      "answer": "Container queries",
      "alternatives": [
        "Conditional styling"
      ],
      "explanation": "Container queries style based on container size (not viewport). Modern: CSS feature. Benefits: independent component styling, reusability. Syntax: @container (max-width: 400px) { ... }. Future: replaces complex media queries. Browser support: growing."
    },
    {
      "question": "What units handle extreme screens?",
      "answer": "Min/max sizing",
      "alternatives": [
        "Clamp function"
      ],
      "explanation": "Min() and max() functions constrain sizing. clamp(min, preferred, max): scales within range. Example: font-size: clamp(1rem, 5vw, 2rem). Responsive: scales smoothly, no breakpoints. Fluid: no jumps at breakpoints. Modern CSS."
    },
    {
      "question": "What prevents mobile-specific issues?",
      "answer": "Viewport meta tag",
      "alternatives": [
        "Mobile configuration"
      ],
      "explanation": "Viewport meta tag: <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">. Prevents: page zoomed out on mobile. Responsive: essential. Disables: user zoom (avoid). Safe: allow-user-zoom (good practice)."
    },
    {
      "question": "What testing ensures mobile usability?",
      "answer": "Mobile usability testing",
      "alternatives": [
        "Mobile testing"
      ],
      "explanation": "Mobile usability testing: real users on devices. Evaluates: touchability, readability, form inputs. Tools: user testing services, real device testing. Findings: improve mobile experience. Responsive design: starts with user testing."
    }
  ]
}