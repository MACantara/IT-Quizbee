{
  "subtopic_id": "transactions",
  "subtopic_name": "Transactions",
  "mode": "elimination",
  "questions": [
    {
      "question": "What does the 'A' in ACID stand for?",
      "options": [
        "Availability",
        "Atomicity",
        "Accuracy",
        "Accessibility"
      ],
      "correct": 1,
      "explanation": "Atomicity ensures transactions are all-or-nothing; either all operations complete or none do."
    },
    {
      "question": "What does the 'C' in ACID stand for?",
      "options": [
        "Completeness",
        "Consistency",
        "Compatibility",
        "Correctness"
      ],
      "correct": 1,
      "explanation": "Consistency ensures transactions bring the database from one valid state to another."
    },
    {
      "question": "What does the 'I' in ACID stand for?",
      "options": [
        "Integrity",
        "Independence",
        "Isolation",
        "Indexing"
      ],
      "correct": 2,
      "explanation": "Isolation ensures concurrent transactions don't interfere with each other."
    },
    {
      "question": "What does the 'D' in ACID stand for?",
      "options": [
        "Durability",
        "Dependency",
        "Distribution",
        "Deployment"
      ],
      "correct": 0,
      "explanation": "Durability guarantees committed transactions remain permanent even after system failures."
    },
    {
      "question": "What SQL command permanently saves transaction changes?",
      "options": [
        "SAVE",
        "COMMIT",
        "END",
        "FINISH"
      ],
      "correct": 1,
      "explanation": "COMMIT makes all changes made in a transaction permanent in the database."
    },
    {
      "question": "What SQL command undoes transaction changes?",
      "options": [
        "UNDO",
        "REVERT",
        "ROLLBACK",
        "CANCEL"
      ],
      "correct": 2,
      "explanation": "ROLLBACK undoes all changes made in the current transaction, restoring previous state."
    },
    {
      "question": "What is a savepoint in transactions?",
      "options": [
        "A backup of the entire database",
        "A point to which you can rollback within a transaction",
        "The end of a transaction",
        "A committed state"
      ],
      "correct": 1,
      "explanation": "A savepoint is a marker within a transaction that allows partial rollback."
    },
    {
      "question": "Which isolation level allows dirty reads?",
      "options": [
        "Read Uncommitted",
        "Read Committed",
        "Repeatable Read",
        "Serializable"
      ],
      "correct": 0,
      "explanation": "Read Uncommitted allows reading uncommitted changes from other transactions, permitting dirty reads."
    },
    {
      "question": "Which isolation level prevents dirty reads but allows non-repeatable reads?",
      "options": [
        "Read Uncommitted",
        "Read Committed",
        "Repeatable Read",
        "Serializable"
      ],
      "correct": 1,
      "explanation": "Read Committed prevents dirty reads but the same query can return different results if data changes."
    },
    {
      "question": "Which isolation level provides the highest level of isolation?",
      "options": [
        "Read Uncommitted",
        "Read Committed",
        "Repeatable Read",
        "Serializable"
      ],
      "correct": 3,
      "explanation": "Serializable is the strictest isolation level, preventing all concurrency anomalies."
    }
  ]
}