{
  "subtopic_id": "indexing",
  "subtopic_name": "Indexing",
  "mode": "elimination",
  "questions": [
    {
      "question": "What is the primary purpose of database indexing?",
      "options": [
        "To store data",
        "To speed up data retrieval",
        "To compress data",
        "To encrypt data"
      ],
      "correct": 1,
      "explanation": "Indexing creates a data structure that improves the speed of data retrieval operations.",
      "id": "dbms_inde_elim_000"
    },
    {
      "question": "Which index allows duplicate values?",
      "options": [
        "Unique index",
        "Primary index",
        "Non-unique index",
        "Cluster index"
      ],
      "correct": 2,
      "explanation": "A non-unique index permits duplicate values in the indexed column.",
      "id": "dbms_inde_elim_001"
    },
    {
      "question": "What data structure is commonly used for database indexes?",
      "options": [
        "Linked List",
        "Array",
        "B-tree",
        "Stack"
      ],
      "correct": 2,
      "explanation": "B-trees are the most common data structure for database indexes due to balanced access times.",
      "id": "dbms_inde_elim_002"
    },
    {
      "question": "What is a clustered index?",
      "options": [
        "An index that groups data",
        "An index that determines physical order of data",
        "An index with multiple columns",
        "An index that compresses data"
      ],
      "correct": 1,
      "explanation": "A clustered index determines the physical order in which data is stored in the table.",
      "id": "dbms_inde_elim_003"
    },
    {
      "question": "How many clustered indexes can a table have?",
      "options": [
        "Unlimited",
        "One",
        "Two",
        "Three"
      ],
      "correct": 1,
      "explanation": "A table can have only one clustered index because data can be physically ordered in only one way.",
      "id": "dbms_inde_elim_004"
    },
    {
      "question": "What is a non-clustered index?",
      "options": [
        "An index that doesn't work",
        "An index separate from the data with pointers",
        "An index without keys",
        "An index for text only"
      ],
      "correct": 1,
      "explanation": "A non-clustered index is stored separately from the data and contains pointers to the data rows.",
      "id": "dbms_inde_elim_005"
    },
    {
      "question": "What is a composite index?",
      "options": [
        "An index on a single column",
        "An index on multiple columns",
        "An index on primary key only",
        "An index for foreign keys"
      ],
      "correct": 1,
      "explanation": "A composite index is an index on two or more columns of a table.",
      "id": "dbms_inde_elim_006"
    },
    {
      "question": "What is a covering index?",
      "options": [
        "An index that hides data",
        "An index containing all columns needed for a query",
        "An index for the entire table",
        "An index that covers errors"
      ],
      "correct": 1,
      "explanation": "A covering index includes all columns referenced in a query, eliminating the need to access the table.",
      "id": "dbms_inde_elim_007"
    },
    {
      "question": "What is the main disadvantage of having too many indexes?",
      "options": [
        "Slower SELECT queries",
        "Slower INSERT, UPDATE, DELETE operations",
        "Less storage space",
        "Better performance"
      ],
      "correct": 1,
      "explanation": "Indexes slow down INSERT, UPDATE, and DELETE operations because indexes must be maintained.",
      "id": "dbms_inde_elim_008"
    },
    {
      "question": "What is a full-text index used for?",
      "options": [
        "Numeric data",
        "Date and time",
        "Text searching",
        "Binary data"
      ],
      "correct": 2,
      "explanation": "Full-text indexes are designed for efficient searching of text-based data within large text fields.",
      "id": "dbms_inde_elim_009"
    }
  ]
}