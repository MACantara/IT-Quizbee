{
  "subtopic_id": "oop_basics",
  "subtopic_name": "OOP Basics",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What does OOP stand for?",
      "answer": "Object-Oriented Programming",
      "alternatives": [],
      "explanation": "OOP stands for Object-Oriented Programming, a programming paradigm based on the concept of objects which contain data and code."
    },
    {
      "question": "What is a class in OOP?",
      "answer": "A blueprint or template for creating objects",
      "alternatives": [],
      "explanation": "A class is a blueprint or template that defines the structure and behavior of objects. It specifies attributes (data) and methods (functions) that objects of that class will have."
    },
    {
      "question": "What is an object in OOP?",
      "answer": "An instance of a class",
      "alternatives": [],
      "explanation": "An object is an instance of a class. It is a concrete entity created from the class blueprint, containing actual values for the attributes defined in the class."
    },
    {
      "question": "What are the four main pillars of OOP?",
      "answer": "Encapsulation, Inheritance, Polymorphism, Abstraction",
      "alternatives": [],
      "explanation": "The four fundamental principles of OOP are: Encapsulation (data hiding), Inheritance (code reuse), Polymorphism (multiple forms), and Abstraction (hiding complexity)."
    },
    {
      "question": "What is a method in OOP?",
      "answer": "A function defined inside a class",
      "alternatives": [],
      "explanation": "A method is a function that is defined inside a class and describes the behaviors or actions that objects of that class can perform."
    },
    {
      "question": "What are attributes in OOP?",
      "answer": "Variables that belong to a class or object",
      "alternatives": [],
      "explanation": "Attributes (also called properties or fields) are variables that belong to a class or object, representing the data or state of the object."
    },
    {
      "question": "What is instantiation?",
      "answer": "Creating an object from a class",
      "alternatives": [],
      "explanation": "Instantiation is the process of creating an actual object (instance) from a class definition, typically using a constructor or the 'new' keyword."
    },
    {
      "question": "What is the 'this' keyword used for?",
      "answer": "To refer to the current object instance",
      "alternatives": [],
      "explanation": "The 'this' keyword refers to the current instance of the class, allowing you to access the object's own attributes and methods within the class."
    },
    {
      "question": "What is a class variable?",
      "answer": "A variable shared by all instances of a class",
      "alternatives": [],
      "explanation": "A class variable (or static variable) is shared by all instances of a class. Changes to it are reflected across all objects of that class."
    },
    {
      "question": "What is an instance variable?",
      "answer": "A variable unique to each object instance",
      "alternatives": [],
      "explanation": "An instance variable is unique to each object instance. Each object has its own copy of instance variables with potentially different values."
    }
  ]
}