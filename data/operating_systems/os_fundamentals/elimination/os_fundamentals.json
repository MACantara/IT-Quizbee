{
  "subtopic_id": "os_fundamentals",
  "subtopic_name": "OS Fundamentals",
  "mode": "elimination",
  "questions": [
    {
      "question": "What is the primary purpose of an operating system?",
      "options": [
        "To compile programs",
        "To manage hardware and software resources",
        "To provide internet connectivity",
        "To create documents"
      ],
      "correct": 1,
      "explanation": "An operating system manages hardware and software resources, acting as an intermediary between users and computer hardware. It controls resource allocation, program execution, and I/O operations.",
      "id": "ope_sys_os_fun_elim_000"
    },
    {
      "question": "Which component of the OS controls the execution of processes?",
      "options": [
        "File system",
        "Device driver",
        "Kernel",
        "Shell"
      ],
      "correct": 2,
      "explanation": "The kernel is the core component that controls process execution, memory management, and hardware interaction. It operates in privileged mode with direct access to hardware resources.",
      "id": "ope_sys_os_fun_elim_001"
    },
    {
      "question": "What type of OS allows multiple users to access the system simultaneously?",
      "options": [
        "Single-user OS",
        "Batch processing OS",
        "Real-time OS",
        "Multi-user OS"
      ],
      "correct": 3,
      "explanation": "Multi-user operating systems enable multiple users to access system resources concurrently. Examples include UNIX, Linux, and mainframe systems with time-sharing capabilities.",
      "id": "ope_sys_os_fun_elim_002"
    },
    {
      "question": "What is the interface between users and the operating system called?",
      "options": [
        "Shell",
        "Kernel",
        "Driver",
        "Firmware"
      ],
      "correct": 0,
      "explanation": "The shell provides the user interface to the operating system, accepting commands and executing them. It can be command-line based or graphical.",
      "id": "ope_sys_os_fun_elim_003"
    },
    {
      "question": "Which OS mode has unrestricted access to hardware?",
      "options": [
        "User mode",
        "Kernel mode",
        "Safe mode",
        "Protected mode"
      ],
      "correct": 1,
      "explanation": "Kernel mode provides unrestricted hardware access and executes privileged instructions. The OS kernel runs in this mode to manage system resources securely.",
      "id": "ope_sys_os_fun_elim_004"
    },
    {
      "question": "What mechanism allows the OS to switch between processes?",
      "options": [
        "Paging",
        "Segmentation",
        "Context switching",
        "Thrashing"
      ],
      "correct": 2,
      "explanation": "Context switching saves the current process state and restores another process state, enabling multitasking. It includes saving registers, program counter, and process information.",
      "id": "ope_sys_os_fun_elim_005"
    },
    {
      "question": "Which interrupt is generated by software executing an illegal operation?",
      "options": [
        "Hardware interrupt",
        "Timer interrupt",
        "Trap",
        "I/O interrupt"
      ],
      "correct": 2,
      "explanation": "A trap is a software-generated interrupt triggered by errors like division by zero or invalid memory access. It transfers control to the OS for error handling.",
      "id": "ope_sys_os_fun_elim_006"
    },
    {
      "question": "What table stores information about all processes in the system?",
      "options": [
        "File allocation table",
        "Page table",
        "Process control block",
        "Interrupt vector table"
      ],
      "correct": 2,
      "explanation": "Process Control Blocks store process information including state, program counter, registers, memory limits, and scheduling data. The OS maintains a PCB for each process.",
      "id": "ope_sys_os_fun_elim_007"
    },
    {
      "question": "What allows programs written for one OS to run on another?",
      "options": [
        "Virtual machine",
        "Compiler",
        "Linker",
        "Debugger"
      ],
      "correct": 0,
      "explanation": "Virtual machines emulate hardware and OS environments, allowing software to run on different platforms. They provide abstraction between applications and physical hardware.",
      "id": "ope_sys_os_fun_elim_008"
    },
    {
      "question": "Which OS service translates logical addresses to physical addresses?",
      "options": [
        "File management",
        "Memory management",
        "Process scheduling",
        "Device management"
      ],
      "correct": 1,
      "explanation": "Memory management handles address translation using techniques like paging and segmentation. It maps virtual addresses used by programs to physical memory locations.",
      "id": "ope_sys_os_fun_elim_009"
    }
  ]
}