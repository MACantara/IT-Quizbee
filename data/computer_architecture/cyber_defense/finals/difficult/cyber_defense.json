{
  "subtopic_id": "cyber_defense",
  "subtopic_name": "Cyber Defense",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What advanced malware analysis technique reverses compiled code to understand its functionality?",
      "answer": "Reverse engineering",
      "alternatives": [
        "Code reverse engineering",
        "Malware reverse engineering"
      ],
      "explanation": "Reverse engineering examines malware binaries using disassemblers (IDA Pro, Ghidra) and debuggers to understand functionality, identify indicators of compromise, and develop signatures. This requires deep understanding of assembly language, file formats, and operating system internals. Static analysis examines code without execution; dynamic analysis observes runtime behavior."
    },
    {
      "question": "What threat intelligence approach attributes attacks to specific adversary groups?",
      "answer": "Threat attribution",
      "alternatives": [
        "Adversary attribution"
      ],
      "explanation": "Threat attribution identifies which threat actor or nation-state is behind attacks by analyzing tactics, techniques, procedures (TTPs), infrastructure, and code similarities. This is challenging as attackers use false flags and share tools. Attribution informs defensive priorities and geopolitical responses. Frameworks like MITRE ATT&CK help categorize adversary behaviors."
    },
    {
      "question": "What security orchestration platform automates incident response workflows?",
      "answer": "SOAR",
      "alternatives": [
        "Security Orchestration, Automation and Response"
      ],
      "explanation": "SOAR platforms automate repetitive security tasks and orchestrate complex workflows across multiple tools. They integrate with SIEM, firewalls, EDR, and threat intelligence to enable automated containment, investigation, and response. SOAR reduces response time, ensures consistent processes, and allows analysts to focus on complex threats. Playbooks define automated response procedures."
    },
    {
      "question": "What technique analyzes system memory to detect rootkits and advanced malware?",
      "answer": "Memory forensics",
      "alternatives": [
        "RAM analysis",
        "Volatile memory analysis"
      ],
      "explanation": "Memory forensics examines system RAM to find malware, encryption keys, passwords, and attack evidence that doesn't persist on disk. Fileless malware and rootkits often hide only in memory. Tools like Volatility analyze memory dumps to recover processes, network connections, and injected code. Memory forensics is crucial for investigating advanced persistent threats."
    },
    {
      "question": "What advanced firewall capability inspects encrypted traffic for threats?",
      "answer": "SSL/TLS inspection",
      "alternatives": [
        "HTTPS inspection",
        "Deep packet inspection"
      ],
      "explanation": "SSL/TLS inspection decrypts encrypted traffic, inspects content for threats, then re-encrypts it. This is necessary as most traffic is now encrypted, providing a hiding place for malware. Implementation requires careful certificate management to avoid breaking trust. Privacy concerns and performance impact require balanced policies about what traffic to inspect."
    },
    {
      "question": "What security approach detects threats by identifying deviations from baseline behavior?",
      "answer": "Behavioral analysis",
      "alternatives": [
        "Anomaly detection",
        "User and Entity Behavior Analytics",
        "UEBA"
      ],
      "explanation": "Behavioral analysis establishes baselines of normal behavior for users, systems, and networks, then detects anomalies indicating potential threats. UEBA (User and Entity Behavior Analytics) uses machine learning to identify compromised accounts, insider threats, and advanced attacks that evade signature-based detection. This catches novel attacks but requires tuning to reduce false positives."
    },
    {
      "question": "What isolation technique runs applications in separate containers to limit malware impact?",
      "answer": "Application sandboxing",
      "alternatives": [
        "Containerization",
        "Process isolation"
      ],
      "explanation": "Application sandboxing restricts what applications can access using OS-level isolation. Each app runs in a restricted environment with limited file system, network, and system call access. This contains malware even if an application is compromised. Technologies include Docker containers, browser sandboxes, and mobile app sandboxes. However, sandbox escapes remain a concern."
    },
    {
      "question": "What deception technology creates fake network assets to detect lateral movement?",
      "answer": "Deception technology",
      "alternatives": [
        "Active defense",
        "Cyber deception"
      ],
      "explanation": "Deception technology deploys fake credentials, servers, databases, and files throughout networks. Any access to these decoys indicates reconnaissance or lateral movement. Unlike passive honeypots, deception tools integrate with production networks. They provide high-fidelity alerts since legitimate users shouldn't access decoys. This shifts defenders' advantage by creating a minefield for attackers."
    },
    {
      "question": "What technique isolates potentially compromised systems while investigating incidents?",
      "answer": "Network containment",
      "alternatives": [
        "Quarantine",
        "Incident containment"
      ],
      "explanation": "Network containment isolates suspected compromised systems from the network without shutting them down, allowing investigation while preventing malware spread. Techniques include VLAN changes, firewall rules, or EDR-enforced isolation. Containment balances business continuity with security - systems remain operational but can't communicate maliciously. This is crucial for ransomware and APT incidents."
    },
    {
      "question": "What advanced persistent threat defense mechanism detects command and control communications?",
      "answer": "Network traffic analysis",
      "alternatives": [
        "NTA",
        "Flow analysis"
      ],
      "explanation": "Network Traffic Analysis (NTA) monitors network flows to detect C2 (command and control) communications, data exfiltration, and lateral movement. Unlike signature-based detection, NTA uses machine learning and behavioral analysis to identify suspicious patterns like beaconing, unusual protocols, or abnormal data volumes. This is effective against APTs that evade endpoint detection."
    }
  ]
}