{
  "subtopic_id": "devops",
  "subtopic_name": "DevOps",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What is DevOps?",
      "answer": "A culture and set of practices that combines development and operations to shorten development lifecycle",
      "alternatives": [],
      "explanation": "DevOps is a culture, movement, and set of practices that combines software development (Dev) and IT operations (Ops) to shorten the development lifecycle while delivering features, fixes, and updates frequently and reliably."
    },
    {
      "question": "What is Continuous Integration (CI)?",
      "answer": "Frequently merging code changes into a central repository with automated builds and tests",
      "alternatives": [],
      "explanation": "Continuous Integration is a practice where developers frequently merge their code changes into a central repository, after which automated builds and tests run. This helps detect integration issues early."
    },
    {
      "question": "What is Continuous Deployment (CD)?",
      "answer": "Automatically deploying every change that passes tests to production",
      "alternatives": [],
      "explanation": "Continuous Deployment is a practice where every code change that passes all stages of the production pipeline is automatically released to production without human intervention. It's the ultimate form of automation."
    },
    {
      "question": "What is Continuous Delivery?",
      "answer": "Keeping code in a deployable state, ready for production release at any time",
      "alternatives": [],
      "explanation": "Continuous Delivery ensures that code is always in a deployable state. Changes are automatically built, tested, and prepared for production release. Unlike Continuous Deployment, it requires manual approval to deploy to production."
    },
    {
      "question": "What is Infrastructure as Code (IaC)?",
      "answer": "Managing and provisioning infrastructure through machine-readable definition files",
      "alternatives": [],
      "explanation": "Infrastructure as Code is the practice of managing and provisioning infrastructure through code instead of manual processes. Configuration files define infrastructure, enabling version control, testing, and automation. Examples: Terraform, Ansible."
    },
    {
      "question": "What is a CI/CD pipeline?",
      "answer": "An automated series of steps to build, test, and deploy code",
      "alternatives": [],
      "explanation": "A CI/CD pipeline is an automated workflow that takes code from version control through various stages (build, test, deploy) to production. It includes steps like code checkout, compilation, testing, security scanning, and deployment."
    },
    {
      "question": "What is containerization in DevOps?",
      "answer": "Packaging applications with their dependencies into lightweight, portable containers",
      "alternatives": [],
      "explanation": "Containerization packages applications and their dependencies into containers that can run consistently across different computing environments. Docker is the most popular containerization platform. Containers are lightweight and portable."
    },
    {
      "question": "What is Docker?",
      "answer": "A platform for developing, shipping, and running applications in containers",
      "alternatives": [],
      "explanation": "Docker is a platform that uses containerization to package applications with all dependencies into standardized units (containers) that can run anywhere. It ensures consistency across development, testing, and production environments."
    },
    {
      "question": "What is Kubernetes?",
      "answer": "An orchestration platform for automating deployment, scaling, and management of containerized applications",
      "alternatives": [],
      "explanation": "Kubernetes (K8s) is an open-source container orchestration platform that automates deployment, scaling, and management of containerized applications. It handles scheduling, load balancing, self-healing, and resource management."
    },
    {
      "question": "What is monitoring and logging in DevOps?",
      "answer": "Tracking application performance and recording events for analysis and troubleshooting",
      "alternatives": [],
      "explanation": "Monitoring tracks application performance, availability, and health metrics in real-time. Logging records events and errors for analysis. Together, they enable proactive issue detection, troubleshooting, and optimization. Tools: Prometheus, ELK Stack, Grafana."
    }
  ]
}