{
  "subtopic_id": "inheritance",
  "subtopic_name": "Inheritance",
  "mode": "elimination",
  "questions": [
    {
      "question": "What is the class that provides properties to another class called?",
      "options": [
        "Child class",
        "Parent class",
        "Sibling class",
        "Base class"
      ],
      "correct": 1,
      "explanation": "The parent class passes its properties and behaviors to child classes.",
      "id": "oop_inhe_elim_000"
    },
    {
      "question": "What is the class that acquires properties from another class called?",
      "options": [
        "Super class",
        "Parent class",
        "Child class",
        "Base class"
      ],
      "correct": 2,
      "explanation": "The child class inherits features from the parent class.",
      "id": "oop_inhe_elim_001"
    },
    {
      "question": "What keyword in Java is used to inherit from a parent class?",
      "options": [
        "inherits",
        "extends",
        "implements",
        "derives"
      ],
      "correct": 1,
      "explanation": "The extends keyword establishes inheritance relationships in Java.",
      "id": "oop_inhe_elim_002"
    },
    {
      "question": "What type of inheritance involves one class inheriting from another?",
      "options": [
        "Single inheritance",
        "Multiple inheritance",
        "Multilevel inheritance",
        "Hierarchical inheritance"
      ],
      "correct": 0,
      "explanation": "Single inheritance involves one parent and one child class.",
      "id": "oop_inhe_elim_003"
    },
    {
      "question": "What type of inheritance involves a chain of parent-child relationships?",
      "options": [
        "Single inheritance",
        "Multiple inheritance",
        "Multilevel inheritance",
        "Hierarchical inheritance"
      ],
      "correct": 2,
      "explanation": "Multilevel inheritance creates a hierarchy with multiple generations.",
      "id": "oop_inhe_elim_004"
    },
    {
      "question": "What keyword in Python calls the parent class constructor?",
      "options": [
        "parent()",
        "super()",
        "base()",
        "this()"
      ],
      "correct": 1,
      "explanation": "The super() function accesses methods from the parent class.",
      "id": "oop_inhe_elim_005"
    },
    {
      "question": "What type of inheritance does Java NOT support directly?",
      "options": [
        "Single inheritance",
        "Multilevel inheritance",
        "Multiple inheritance",
        "Hierarchical inheritance"
      ],
      "correct": 2,
      "explanation": "Java does not allow a class to extend multiple classes directly.",
      "id": "oop_inhe_elim_006"
    },
    {
      "question": "What is the relationship between parent and child classes?",
      "options": [
        "has-a",
        "is-a",
        "uses-a",
        "knows-a"
      ],
      "correct": 1,
      "explanation": "Inheritance represents an is-a relationship between classes.",
      "id": "oop_inhe_elim_007"
    },
    {
      "question": "What can subclasses add to inherited features?",
      "options": [
        "Only data",
        "Only methods",
        "Additional features",
        "Nothing"
      ],
      "correct": 2,
      "explanation": "Subclasses can extend functionality by adding new features.",
      "id": "oop_inhe_elim_008"
    },
    {
      "question": "What benefit does inheritance provide?",
      "options": [
        "Faster execution",
        "Code reusability",
        "More memory",
        "Simpler syntax"
      ],
      "correct": 1,
      "explanation": "Inheritance promotes code reuse by sharing common functionality.",
      "id": "oop_inhe_elim_009"
    }
  ]
}