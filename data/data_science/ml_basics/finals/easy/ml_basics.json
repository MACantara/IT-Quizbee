{
  "subtopic_id": "ml_basics",
  "subtopic_name": "Machine Learning Basics",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What type of learning uses labeled training data to make predictions?",
      "answer": "Supervised learning",
      "alternatives": [
        "Supervised machine learning"
      ],
      "explanation": "Supervised learning trains models on labeled data (input-output pairs) to predict outputs for new inputs. Examples include classification (predicting categories) and regression (predicting numbers). The model learns from examples, then applies learned patterns to unseen data. Most practical ML applications use supervised learning."
    },
    {
      "question": "What type of learning finds patterns in unlabeled data?",
      "answer": "Unsupervised learning",
      "alternatives": [
        "Unsupervised machine learning"
      ],
      "explanation": "Unsupervised learning discovers patterns and structure in data without labels. Tasks include clustering (grouping similar items), dimensionality reduction (simplifying data), and anomaly detection (finding unusual patterns). It's used for customer segmentation, data exploration, and finding hidden structures in complex datasets."
    },
    {
      "question": "What is the data used to train a machine learning model?",
      "answer": "Training data",
      "alternatives": [
        "Training set"
      ],
      "explanation": "Training data is the labeled dataset used to teach models. It contains examples with inputs (features) and correct outputs (labels). Models learn patterns and relationships from training data. Quality and quantity of training data significantly impact model performance - more diverse, representative data generally produces better models."
    },
    {
      "question": "What is the separate data used to evaluate model performance?",
      "answer": "Test data",
      "alternatives": [
        "Test set"
      ],
      "explanation": "Test data evaluates model performance on unseen data after training. It's kept completely separate from training to assess generalization ability. Good test performance indicates the model learned true patterns rather than memorizing training data. Test accuracy estimates real-world performance."
    },
    {
      "question": "What problem occurs when a model memorizes training data instead of learning patterns?",
      "answer": "Overfitting",
      "alternatives": [
        "Overtraining"
      ],
      "explanation": "Overfitting occurs when models learn training data too well, including noise and quirks, rather than underlying patterns. Overfitted models have high training accuracy but poor test performance. Causes include too many parameters, insufficient data, or excessive training. Solutions include regularization, cross-validation, and early stopping."
    },
    {
      "question": "What problem occurs when a model is too simple to capture data patterns?",
      "answer": "Underfitting",
      "alternatives": [
        "High bias"
      ],
      "explanation": "Underfitting happens when models are too simple to capture data complexity, performing poorly on both training and test data. It indicates high bias - the model makes strong simplifying assumptions that don't match reality. Solutions include using more complex models, adding features, or reducing regularization."
    },
    {
      "question": "What are the individual measurable properties used as model inputs?",
      "answer": "Features",
      "alternatives": [
        "Input variables",
        "Attributes"
      ],
      "explanation": "Features (or attributes) are measurable properties or characteristics used as model inputs. In house price prediction, features include square footage, bedrooms, location. Good feature selection and engineering are crucial for model performance - relevant, informative features enable accurate predictions while irrelevant features add noise."
    },
    {
      "question": "What is the value being predicted in supervised learning?",
      "answer": "Target",
      "alternatives": [
        "Label",
        "Output",
        "Response variable"
      ],
      "explanation": "The target (or label/output) is what we're trying to predict in supervised learning. In classification, targets are categories (spam/not spam); in regression, they're continuous values (house price). Clear, accurate target labels are essential - incorrect labels lead to poor model performance regardless of algorithm sophistication."
    },
    {
      "question": "What measures how well a model performs on a task?",
      "answer": "Accuracy",
      "alternatives": [
        "Model accuracy"
      ],
      "explanation": "Accuracy measures the proportion of correct predictions. For classification, it's (correct predictions)/(total predictions). While intuitive, accuracy can be misleading for imbalanced datasets - a model predicting everything as the majority class might have high accuracy but be useless. Other metrics like precision, recall, and F1-score provide additional insight."
    },
    {
      "question": "What technique splits data into training and test sets randomly?",
      "answer": "Train-test split",
      "alternatives": [
        "Data splitting"
      ],
      "explanation": "Train-test split divides data randomly into training and test sets, typically 70-80% training, 20-30% test. This enables model evaluation on unseen data. Random splitting ensures both sets are representative. For small datasets, cross-validation is better. Stratification maintains class proportions in both sets."
    }
  ]
}