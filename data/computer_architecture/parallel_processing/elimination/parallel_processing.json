{
  "subtopic_id": "parallel_processing",
  "subtopic_name": "Parallel Processing",
  "mode": "elimination",
  "questions": [
    {
      "question": "What is parallel processing?",
      "options": [
        "Executing one instruction at a time",
        "Executing multiple instructions simultaneously",
        "Storing data in parallel arrays",
        "Using multiple programming languages"
      ],
      "correct": 1,
      "explanation": "Parallel processing executes multiple instructions or tasks simultaneously using multiple processors or cores."
    },
    {
      "question": "What does a multicore processor have?",
      "options": [
        "Multiple cache levels",
        "Multiple independent processing units on one chip",
        "Multiple power supplies",
        "Multiple operating systems"
      ],
      "correct": 1,
      "explanation": "A multicore processor contains two or more independent processing cores on a single chip, enabling parallel execution."
    },
    {
      "question": "What is SIMD?",
      "options": [
        "Single Instruction Multiple Data",
        "Sequential Instruction Multiple Devices",
        "System Integration Multiple Drivers",
        "Synchronized Input Multiple Devices"
      ],
      "correct": 0,
      "explanation": "SIMD (Single Instruction Multiple Data) applies one instruction to multiple data elements simultaneously."
    },
    {
      "question": "What is MIMD?",
      "options": [
        "Maximum Instruction Minimum Data",
        "Multiple Instruction Multiple Data",
        "Minimal Input Maximum Devices",
        "Memory Intensive Multiple Drivers"
      ],
      "correct": 1,
      "explanation": "MIMD (Multiple Instruction Multiple Data) allows different processors to execute different instructions on different data."
    },
    {
      "question": "What is a thread in computing?",
      "options": [
        "A physical wire in the processor",
        "The smallest unit of execution that can be scheduled",
        "A type of memory",
        "A cooling component"
      ],
      "correct": 1,
      "explanation": "A thread is the smallest sequence of programmed instructions that can be independently scheduled and executed."
    },
    {
      "question": "What is multithreading?",
      "options": [
        "Using multiple cables",
        "Running multiple threads concurrently",
        "Connecting multiple processors",
        "Distributing data across drives"
      ],
      "correct": 1,
      "explanation": "Multithreading allows a CPU to execute multiple threads concurrently, improving resource utilization."
    },
    {
      "question": "What is speedup in parallel computing?",
      "options": [
        "How fast the processor runs",
        "Ratio of serial to parallel execution time",
        "Clock frequency increase",
        "Data transfer rate"
      ],
      "correct": 1,
      "explanation": "Speedup measures performance improvement, calculated as sequential time divided by parallel time."
    },
    {
      "question": "What is Amdahl's Law about?",
      "options": [
        "Memory hierarchy design",
        "Theoretical maximum speedup from parallelization",
        "Cache replacement policies",
        "Instruction encoding"
      ],
      "correct": 1,
      "explanation": "Amdahl's Law states that speedup is limited by the sequential portion of a program that cannot be parallelized."
    },
    {
      "question": "What is a GPU primarily designed for?",
      "options": [
        "General purpose computing",
        "Database operations",
        "Parallel processing of graphics and data",
        "Network communication"
      ],
      "correct": 2,
      "explanation": "GPUs are designed for massive parallel processing, particularly for graphics rendering and data-parallel computations."
    },
    {
      "question": "What is task parallelism?",
      "options": [
        "Same task on different data",
        "Different tasks executing concurrently",
        "Sequential task execution",
        "Task scheduling algorithm"
      ],
      "correct": 1,
      "explanation": "Task parallelism divides a program into different tasks that can be executed simultaneously on different processors."
    }
  ]
}