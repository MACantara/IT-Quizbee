{
  "subtopic_id": "memory_hierarchy",
  "subtopic_name": "Memory Hierarchy",
  "mode": "elimination",
  "questions": [
    {
      "question": "Which memory type is the fastest but most expensive?",
      "options": [
        "Hard Disk Drive",
        "RAM",
        "CPU Registers",
        "Cache Memory"
      ],
      "correct": 2,
      "explanation": "CPU registers are the fastest memory type, located directly within the processor, but they have very limited capacity and are the most expensive per byte.",
      "id": "com_arc_mem_hie_elim_000"
    },
    {
      "question": "What is the primary purpose of cache memory?",
      "options": [
        "Store the operating system",
        "Provide permanent storage",
        "Reduce average memory access time",
        "Replace hard disk drives"
      ],
      "correct": 2,
      "explanation": "Cache memory stores frequently accessed data closer to the CPU to reduce average memory access time and improve system performance.",
      "id": "com_arc_mem_hie_elim_001"
    },
    {
      "question": "Which level of cache is typically the largest?",
      "options": [
        "L1 Cache",
        "L2 Cache",
        "L3 Cache",
        "L4 Cache"
      ],
      "correct": 2,
      "explanation": "L3 cache is typically the largest cache level, shared among cores, though it is slower than L1 and L2 caches.",
      "id": "com_arc_mem_hie_elim_002"
    },
    {
      "question": "What does a cache hit mean?",
      "options": [
        "Cache is full",
        "Requested data is found in cache",
        "Cache needs to be cleared",
        "Cache is malfunctioning"
      ],
      "correct": 1,
      "explanation": "A cache hit occurs when the requested data is found in the cache, allowing faster access without retrieving it from main memory.",
      "id": "com_arc_mem_hie_elim_003"
    },
    {
      "question": "What principle states that recently accessed data is likely to be accessed again soon?",
      "options": [
        "Spatial locality",
        "Temporal locality",
        "Cache coherence",
        "Memory hierarchy"
      ],
      "correct": 1,
      "explanation": "Temporal locality is the principle that recently accessed data is likely to be accessed again in the near future, making caching effective.",
      "id": "com_arc_mem_hie_elim_004"
    },
    {
      "question": "What is the typical access time for RAM compared to cache?",
      "options": [
        "Much faster",
        "Same speed",
        "Much slower",
        "Slightly faster"
      ],
      "correct": 2,
      "explanation": "RAM access time is significantly slower than cache memory, typically taking 50-100 nanoseconds compared to cache's 1-10 nanoseconds.",
      "id": "com_arc_mem_hie_elim_005"
    },
    {
      "question": "What does spatial locality refer to?",
      "options": [
        "Data accessed recently will be accessed again",
        "Data near recently accessed data will likely be accessed",
        "Data is stored in multiple locations",
        "Memory is organized in layers"
      ],
      "correct": 1,
      "explanation": "Spatial locality means that if data at a particular location is accessed, nearby data is likely to be accessed soon, justifying cache line fetching.",
      "id": "com_arc_mem_hie_elim_006"
    },
    {
      "question": "Which cache mapping technique has the lowest miss rate but highest complexity?",
      "options": [
        "Direct mapped",
        "Fully associative",
        "Set associative",
        "Hybrid mapping"
      ],
      "correct": 1,
      "explanation": "Fully associative mapping allows any block to be placed anywhere in cache, providing the lowest miss rate but requiring complex search hardware.",
      "id": "com_arc_mem_hie_elim_007"
    },
    {
      "question": "What is virtual memory?",
      "options": [
        "Memory that doesn't physically exist",
        "Using disk space to extend RAM",
        "Cloud-based memory storage",
        "Cache memory for the GPU"
      ],
      "correct": 1,
      "explanation": "Virtual memory uses disk storage to extend available RAM, allowing the system to run larger programs than physical memory alone would permit.",
      "id": "com_arc_mem_hie_elim_008"
    },
    {
      "question": "What happens during a cache miss?",
      "options": [
        "The system crashes",
        "Data is retrieved from a lower level of memory hierarchy",
        "The cache is cleared",
        "The CPU stops processing"
      ],
      "correct": 1,
      "explanation": "During a cache miss, the requested data must be retrieved from main memory or storage, incurring a performance penalty.",
      "id": "com_arc_mem_hie_elim_009"
    }
  ]
}