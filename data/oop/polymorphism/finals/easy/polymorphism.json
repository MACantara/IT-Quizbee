{
  "subtopic_id": "polymorphism",
  "subtopic_name": "Polymorphism",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What does polymorphism mean?",
      "answer": "many forms",
      "alternatives": [
        "multiple forms",
        "many shapes"
      ],
      "explanation": "Polymorphism allows objects to take multiple forms.",
      "id": "poly_poly_e_finals_000"
    },
    {
      "question": "What polymorphism type is resolved at compile time?",
      "answer": "compile-time polymorphism",
      "alternatives": [
        "static polymorphism",
        "early binding"
      ],
      "explanation": "Compile-time polymorphism resolves during compilation.",
      "id": "poly_poly_e_finals_001"
    },
    {
      "question": "What polymorphism type is resolved at runtime?",
      "answer": "runtime polymorphism",
      "alternatives": [
        "dynamic polymorphism",
        "late binding"
      ],
      "explanation": "Runtime polymorphism resolves during execution.",
      "id": "poly_poly_e_finals_002"
    },
    {
      "question": "What technique creates multiple methods with same name?",
      "answer": "method overloading",
      "alternatives": [
        "overloading",
        "function overloading"
      ],
      "explanation": "Overloading uses same name with different parameters.",
      "id": "poly_poly_e_finals_003"
    },
    {
      "question": "What technique redefines parent methods in child class?",
      "answer": "method overriding",
      "alternatives": [
        "overriding"
      ],
      "explanation": "Overriding changes inherited method implementations.",
      "id": "poly_poly_e_finals_004"
    },
    {
      "question": "What C++ keyword enables runtime polymorphism?",
      "answer": "virtual",
      "alternatives": [
        "Virtual"
      ],
      "explanation": "Virtual functions support dynamic dispatch.",
      "id": "poly_poly_e_finals_005"
    },
    {
      "question": "What distinguishes overloaded methods?",
      "answer": "parameters",
      "alternatives": [
        "parameter list",
        "arguments"
      ],
      "explanation": "Overloaded methods differ in parameter types or count.",
      "id": "poly_poly_e_finals_006"
    },
    {
      "question": "What binding occurs at compile time?",
      "answer": "early binding",
      "alternatives": [
        "static binding"
      ],
      "explanation": "Early binding resolves method calls before execution.",
      "id": "poly_poly_e_finals_007"
    },
    {
      "question": "What binding occurs at runtime?",
      "answer": "late binding",
      "alternatives": [
        "dynamic binding"
      ],
      "explanation": "Late binding resolves method calls during execution.",
      "id": "poly_poly_e_finals_008"
    },
    {
      "question": "What typing checks behavior instead of type?",
      "answer": "duck typing",
      "alternatives": [
        "duck-typing"
      ],
      "explanation": "Duck typing focuses on what objects can do.",
      "id": "poly_poly_e_finals_009"
    }
  ]
}