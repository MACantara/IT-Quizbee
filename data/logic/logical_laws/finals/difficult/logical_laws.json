{
  "subtopic_id": "logical_laws",
  "subtopic_name": "Logical Laws",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What is functional completeness?",
      "answer": "Operators sufficient to express all functions",
      "alternatives": [
        "Operator sufficiency"
      ],
      "explanation": "Complete: {AND, OR, NOT} sufficient. Proof: can express any truth function. Other: {NAND}, {NOR} also complete. Importance: universal operator sets. Complexity: determining completeness NP-hard."
    },
    {
      "question": "What is the absorption identity?",
      "answer": "p(pq)  p and p(pq)  p",
      "alternatives": [
        "Absorption"
      ],
      "explanation": "Law: absorbs redundant part. Proof: truth table shows. Generalization: absorption by supersets. Application: Boolean minimization. Importance: simplification. Usage: circuit design."
    },
    {
      "question": "What is the consensus theorem?",
      "answer": "Terms not in consensus are redundant",
      "alternatives": [
        "Consensus"
      ],
      "explanation": "Theorem: Boolean algebra rule. Formula: xyx'zyz  xyx'z. Proof: algebraic or truth table. Application: minimization. Importance: optimization. Complexity: applied in Quine-McCluskey."
    },
    {
      "question": "What is Boolean algebra?",
      "answer": "Mathematical structure for logical operations",
      "alternatives": [
        "Logical algebra"
      ],
      "explanation": "Algebra: {T,F} with operations {,,}. Laws: commutative, associative, distributive, etc. Application: logic circuits, algebra. Importance: formal foundation. Developer: George Boole."
    },
    {
      "question": "What is Stone's theorem?",
      "answer": "Boolean algebras isomorphic to set algebras",
      "alternatives": [
        "Boolean representation"
      ],
      "explanation": "Theorem: representation theorem. Implication: abstract algebra has concrete model. Importance: mathematical foundation. Application: theory. Developer: Marshall Stone."
    },
    {
      "question": "What is the principle of explosion?",
      "answer": "From contradiction, any statement follows",
      "alternatives": [
        "Ex falso quodlibet"
      ],
      "explanation": "Principle: pp  q for any q. Logic: contradiction implies anything. Controversy: intuitionistic logic rejects. Application: consistency importance. Restriction: paraconsistent logic differs."
    },
    {
      "question": "What is Heyting algebra?",
      "answer": "Algebra for intuitionistic logic",
      "alternatives": [
        "Intuitionistic algebra"
      ],
      "explanation": "Algebra: generalizes Boolean algebra. Difference: excluded middle doesn't hold. Law: xx  T always. Application: constructive mathematics. Importance: non-classical logic."
    },
    {
      "question": "What is Kleene algebra?",
      "answer": "Algebra with fixed-point operators",
      "alternatives": [
        "Iteration algebra"
      ],
      "explanation": "Algebra: extends Boolean with iteration. Operators: *,  (Kleene star). Application: regular expressions, automata theory. Importance: computation theory. Usage: pattern matching."
    },
    {
      "question": "What is the derivation rule?",
      "answer": "Formal system for deriving theorems",
      "alternatives": [
        "Proof system"
      ],
      "explanation": "System: Hilbert-style or natural deduction. Rules: modus ponens, others. Purpose: mechanically derive theorems. Completeness: for classical logic. Application: formal verification. Importance: proof theory."
    },
    {
      "question": "What is G�del's completeness theorem?",
      "answer": "Provable iff logically valid",
      "alternatives": [
        "Completeness"
      ],
      "explanation": "Theorem:  f iff  f. Meaning: proof system captures logical validity. Scope: first-order logic. Implication: no gap between syntax and semantics. Importance: foundational result. Developer: Kurt G�del."
    }
  ]
}