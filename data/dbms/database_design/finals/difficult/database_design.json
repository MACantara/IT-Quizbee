{
  "subtopic_id": "database_design",
  "subtopic_name": "Database Design",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "A relationship involving three or more entity types.",
      "answer": "Ternary relationship",
      "alternatives": [
        "N-ary relationship"
      ],
      "explanation": "Ternary relationships connect three entities, like supplier-part-project relationships.",
      "id": "dat_des_dat_des_d_finals_000"
    },
    {
      "question": "An alternative data modeling notation to ER diagrams.",
      "answer": "UML class diagram",
      "alternatives": [
        "Unified Modeling Language"
      ],
      "explanation": "UML class diagrams can model database structures with classes, attributes, and associations.",
      "id": "dat_des_dat_des_d_finals_001"
    },
    {
      "question": "A design pattern where a generalized entity is specialized into subtypes.",
      "answer": "Generalization",
      "alternatives": [
        "Inheritance",
        "IS-A relationship"
      ],
      "explanation": "Generalization models hierarchical relationships where subtypes inherit from supertypes.",
      "id": "dat_des_dat_des_d_finals_002"
    },
    {
      "question": "Constraint where a subtype entity must belong to exactly one supertype.",
      "answer": "Disjoint constraint",
      "alternatives": [],
      "explanation": "Disjoint constraints ensure an entity instance belongs to at most one subtype.",
      "id": "dat_des_dat_des_d_finals_003"
    },
    {
      "question": "Constraint allowing a subtype entity to belong to multiple supertypes.",
      "answer": "Overlapping constraint",
      "alternatives": [],
      "explanation": "Overlapping constraints permit entity instances to belong to multiple subtypes simultaneously.",
      "id": "dat_des_dat_des_d_finals_004"
    },
    {
      "question": "Whether every supertype instance must be a member of some subtype.",
      "answer": "Completeness constraint",
      "alternatives": [
        "Total or Partial specialization"
      ],
      "explanation": "Completeness constraints specify if all supertype entities must belong to a subtype (total) or not (partial).",
      "id": "dat_des_dat_des_d_finals_005"
    },
    {
      "question": "A relationship where an entity relates to itself.",
      "answer": "Recursive relationship",
      "alternatives": [
        "Unary relationship",
        "Self-referencing relationship"
      ],
      "explanation": "Recursive relationships model hierarchies like employee-manager or prerequisite courses.",
      "id": "dat_des_dat_des_d_finals_006"
    },
    {
      "question": "The process of mapping an ER model to relational tables.",
      "answer": "ER-to-relational mapping",
      "alternatives": [],
      "explanation": "ER-to-relational mapping transforms entities and relationships into table structures.",
      "id": "dat_des_dat_des_d_finals_007"
    },
    {
      "question": "An attribute that helps distinguish instances in a weak entity.",
      "answer": "Partial key",
      "alternatives": [
        "Discriminator"
      ],
      "explanation": "Partial keys uniquely identify weak entity instances when combined with the owner entity's key.",
      "id": "dat_des_dat_des_d_finals_008"
    },
    {
      "question": "A notation that uses crow's foot symbols to show relationship cardinality.",
      "answer": "Crow's foot notation",
      "alternatives": [
        "Martin notation"
      ],
      "explanation": "Crow's foot notation uses graphical symbols to represent cardinality constraints in ER diagrams.",
      "id": "dat_des_dat_des_d_finals_009"
    }
  ]
}