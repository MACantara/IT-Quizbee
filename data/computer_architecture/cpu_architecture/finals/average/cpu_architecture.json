{
  "subtopic_id": "cpu_architecture",
  "subtopic_name": "CPU Architecture",
  "mode": "finals",
  "difficulty": "average",
  "questions": [
    {
      "question": "What does CPI stand for in CPU performance?",
      "answer": "Cycles Per Instruction",
      "alternatives": [],
      "explanation": "CPI measures the average number of clock cycles needed to execute a single instruction, indicating CPU efficiency."
    },
    {
      "question": "What register stores memory addresses for read/write operations?",
      "answer": "Memory Address Register",
      "alternatives": ["MAR"],
      "explanation": "The MAR holds the memory address where data will be read from or written to during memory operations."
    },
    {
      "question": "What register temporarily holds data being transferred to or from memory?",
      "answer": "Memory Data Register",
      "alternatives": ["MDR", "Memory Buffer Register", "MBR"],
      "explanation": "The MDR acts as a buffer, temporarily storing data during transfer between the CPU and memory."
    },
    {
      "question": "What is the bottleneck in Von Neumann architecture called?",
      "answer": "Von Neumann bottleneck",
      "alternatives": ["VN bottleneck"],
      "explanation": "The Von Neumann bottleneck occurs because instructions and data share the same bus, limiting throughput."
    },
    {
      "question": "What does MIPS stand for?",
      "answer": "Million Instructions Per Second",
      "alternatives": ["Millions of Instructions Per Second"],
      "explanation": "MIPS is a measure of CPU performance indicating how many millions of instructions can be executed per second."
    },
    {
      "question": "What is the purpose of the accumulator register?",
      "answer": "Store intermediate arithmetic results",
      "alternatives": ["Store calculation results", "Hold arithmetic results"],
      "explanation": "The accumulator temporarily stores intermediate results during arithmetic and logical operations in the ALU."
    },
    {
      "question": "What technique allows the CPU to start the next instruction before finishing the current one?",
      "answer": "Pipelining",
      "alternatives": ["Instruction pipelining"],
      "explanation": "Pipelining overlaps the execution of multiple instructions to improve CPU throughput and efficiency."
    },
    {
      "question": "What determines the maximum number of memory locations a CPU can address?",
      "answer": "Address bus width",
      "alternatives": ["Size of address bus", "Address bus size"],
      "explanation": "The width of the address bus determines the addressable memory space; an n-bit address bus can address 2^n locations."
    },
    {
      "question": "What does the data bus transfer between CPU and memory?",
      "answer": "Data and instructions",
      "alternatives": ["Data", "Instructions and data"],
      "explanation": "The data bus is a bidirectional pathway that carries both data and instructions between the CPU and memory."
    },
    {
      "question": "What is a CPU core?",
      "answer": "Independent processing unit within CPU",
      "alternatives": ["Processing unit", "Execution unit"],
      "explanation": "A core is an independent processing unit within a CPU that can execute instructions separately from other cores."
    }
  ]
}