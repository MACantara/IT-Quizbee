{
  "subtopic_id": "javascript_basics",
  "subtopic_name": "JavaScript Basics",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What syntax defines concise function expressions?",
      "answer": "arrow function",
      "alternatives": ["arrow functions", "=>"],
      "explanation": "Arrow functions provide shorter syntax for functions."
    },
    {
      "question": "What operator creates shallow copies of arrays?",
      "answer": "spread operator",
      "alternatives": ["...", "spread"],
      "explanation": "The spread operator (...) expands iterables."
    },
    {
      "question": "What syntax extracts values from arrays or objects?",
      "answer": "destructuring",
      "alternatives": ["destructuring assignment"],
      "explanation": "Destructuring unpacks values into distinct variables."
    },
    {
      "question": "What syntax embeds expressions in strings?",
      "answer": "template literal",
      "alternatives": ["template literals", "template string", "backticks"],
      "explanation": "Template literals use backticks for string interpolation."
    },
    {
      "question": "What object handles asynchronous operations?",
      "answer": "Promise",
      "alternatives": [],
      "explanation": "Promises represent eventual completion of async tasks."
    },
    {
      "question": "What keyword pauses async function execution?",
      "answer": "await",
      "alternatives": [],
      "explanation": "await waits for Promise resolution."
    },
    {
      "question": "What method creates new arrays from existing ones?",
      "answer": "map",
      "alternatives": [],
      "explanation": "map transforms each array element."
    },
    {
      "question": "What method filters array elements by condition?",
      "answer": "filter",
      "alternatives": [],
      "explanation": "filter creates arrays with elements passing tests."
    },
    {
      "question": "What method reduces arrays to single values?",
      "answer": "reduce",
      "alternatives": [],
      "explanation": "reduce accumulates array values through iteration."
    },
    {
      "question": "What prevents variable hoisting issues?",
      "answer": "let",
      "alternatives": ["const", "block scoping"],
      "explanation": "let and const avoid hoisting problems."
    }
  ]
}