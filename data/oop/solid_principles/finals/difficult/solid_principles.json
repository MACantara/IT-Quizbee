{
  "subtopic_id": "solid_principles",
  "subtopic_name": "SOLID Principles",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "Who introduced SOLID principles?",
      "answer": "Robert C. Martin",
      "alternatives": ["Uncle Bob", "Bob Martin"],
      "explanation": "Robert Martin formalized SOLID principles."
    },
    {
      "question": "What anti-pattern violates Single Responsibility?",
      "answer": "god object",
      "alternatives": ["god class"],
      "explanation": "God objects handle too many responsibilities."
    },
    {
      "question": "What mechanism enforces Open/Closed at compile time?",
      "answer": "templates",
      "alternatives": ["generics"],
      "explanation": "Templates enable extension without modification."
    },
    {
      "question": "What problem does Liskov Substitution prevent?",
      "answer": "behavioral incompatibility",
      "alternatives": ["contract violation"],
      "explanation": "LSP ensures substitution correctness."
    },
    {
      "question": "What anti-pattern violates Interface Segregation?",
      "answer": "fat interface",
      "alternatives": ["polluted interface"],
      "explanation": "Fat interfaces force unused dependencies."
    },
    {
      "question": "What framework feature implements Dependency Inversion?",
      "answer": "IoC container",
      "alternatives": ["inversion of control", "DI container"],
      "explanation": "IoC containers manage dependencies."
    },
    {
      "question": "What metric detects Single Responsibility violations?",
      "answer": "LCOM",
      "alternatives": ["Lack of Cohesion of Methods"],
      "explanation": "LCOM measures class cohesion."
    },
    {
      "question": "What refactoring supports Interface Segregation?",
      "answer": "extract interface",
      "alternatives": ["interface extraction"],
      "explanation": "Extract interface creates focused contracts."
    },
    {
      "question": "What principle do SOLID principles collectively support?",
      "answer": "separation of concerns",
      "alternatives": ["SoC"],
      "explanation": "SOLID promotes modular design."
    },
    {
      "question": "What design approach follows all SOLID principles?",
      "answer": "clean architecture",
      "alternatives": ["hexagonal architecture"],
      "explanation": "Clean architecture embodies SOLID principles."
    }
  ]
}