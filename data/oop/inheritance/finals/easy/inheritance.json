{
  "subtopic_id": "inheritance",
  "subtopic_name": "Inheritance",
  "mode": "finals",
  "difficulty": "easy",
  "questions": [
    {
      "question": "What is inheritance in object-oriented programming?",
      "answer": "A mechanism where a class acquires properties and behaviors from another class",
      "alternatives": [],
      "explanation": "Inheritance is a fundamental OOP concept that allows a class (child/derived class) to inherit attributes and methods from another class (parent/base class), promoting code reusability."
    },
    {
      "question": "Which class provides properties and methods to be inherited?",
      "answer": "Parent class",
      "alternatives": [],
      "explanation": "The parent class (also called base class or superclass) is the class that provides properties and methods to be inherited by child classes."
    },
    {
      "question": "What keyword is typically used in Java to inherit from a class?",
      "answer": "extends",
      "alternatives": [],
      "explanation": "In Java, the 'extends' keyword is used to establish an inheritance relationship between a child class and a parent class."
    },
    {
      "question": "What type of inheritance involves one class inheriting from multiple classes directly?",
      "answer": "Multiple inheritance",
      "alternatives": [],
      "explanation": "Multiple inheritance occurs when a class inherits from more than one parent class. Note that some languages like Java don't support multiple inheritance with classes (only with interfaces)."
    },
    {
      "question": "Which of the following is NOT a benefit of inheritance?",
      "answer": "Increased memory usage",
      "alternatives": [],
      "explanation": "Increased memory usage is not a benefit; it's potentially a drawback. The benefits of inheritance include code reusability, method overriding, and establishing relationships between classes."
    },
    {
      "question": "What is multilevel inheritance?",
      "answer": "A class inheriting from another class which is already a derived class",
      "alternatives": [],
      "explanation": "Multilevel inheritance is when a class inherits from a derived class, creating a chain of inheritance (e.g., C inherits from B, B inherits from A)."
    },
    {
      "question": "In Python, which function is used to call a parent class's constructor?",
      "answer": "super()",
      "alternatives": [],
      "explanation": "In Python, the super() function is used to call methods from the parent class, commonly used to invoke the parent's constructor (__init__)."
    },
    {
      "question": "What is the 'IS-A' relationship in inheritance?",
      "answer": "A derived class is a type of base class",
      "alternatives": [],
      "explanation": "The 'IS-A' relationship describes inheritance where the derived class is a specialized version of the base class (e.g., Dog IS-A Animal)."
    },
    {
      "question": "Which access modifier in Java allows inherited members to be accessed by child classes?",
      "answer": "protected",
      "alternatives": [],
      "explanation": "The 'protected' access modifier allows members to be accessed within the same package and by subclasses (child classes), even if they're in different packages."
    },
    {
      "question": "What happens when a child class defines a method with the same signature as in the parent class?",
      "answer": "Method overriding",
      "alternatives": [],
      "explanation": "Method overriding occurs when a child class provides a specific implementation for a method that is already defined in its parent class with the same signature."
    }
  ]
}