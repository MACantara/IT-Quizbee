{
  "subtopic_id": "computer_history",
  "subtopic_name": "Computer History",
  "mode": "finals",
  "difficulty": "average",
  "questions": [
    {
      "question": "What theoretical concept shaped computer science?",
      "answer": "Church-Turing Thesis",
      "alternatives": [
        "Computability theory"
      ],
      "explanation": "Church-Turing Thesis: different computational models equivalent. Implication: what's computable is universal. Impact: computational boundaries established. Lambda calculus (Church) vs Turing machines. Uncomputability: proven limits exist. Halting problem: undecidable. Foundation: computer science theory."
    },
    {
      "question": "What was the vacuum tube predecessor?",
      "answer": "ENIAC used vacuum tubes",
      "alternatives": [
        "Thermionic valves"
      ],
      "explanation": "Vacuum tubes: electronic switches (on/off). ENIAC: 18,000 vacuum tubes. Reliability: frequent failures (mean time ~5.6 hours). Heat: required heavy cooling. Power: consumed enormous electricity. Replacement: transistor superior. Legacy: showed electronic computation feasible."
    },
    {
      "question": "What standardized early operating systems?",
      "answer": "UNIX",
      "alternatives": [
        "Unix system"
      ],
      "explanation": "UNIX: created 1969 (Bell Labs). Philosophy: simple, modular, portable. Design: inspired by Multics. Variants: BSD, System V, Linux. Standard: POSIX compliance. Impact: academia, servers, eventually everywhere. Legacy: still relevant (Linux, macOS). Influence: shaped computing culture."
    },
    {
      "question": "What language transformed programming?",
      "answer": "C programming language",
      "alternatives": [
        "C language"
      ],
      "explanation": "C: created 1972 (Dennis Ritchie). Purpose: portable systems language. Influence: inspired C++, C#, Java, JavaScript. Efficiency: low-level control, high-level abstraction. UNIX: written in C. Longevity: still widely used (Linux kernel, embedded). Impact: modern programming foundation."
    },
    {
      "question": "What storage medium dominated computing era?",
      "answer": "Punched cards",
      "alternatives": [
        "IBM cards"
      ],
      "explanation": "Punched cards: data storage (early era). Format: 80 columns standardized. Reading: mechanical cards through readers. Error-prone: misaligned cards failed. Replacement: magnetic tape, then disk. Legacy: 'ANSI card' in computing. Batch processing: card-based systems drove methodology."
    },
    {
      "question": "What revolution changed computing architecture?",
      "answer": "Very Large Scale Integration",
      "alternatives": [
        "VLSI"
      ],
      "explanation": "VLSI: millions of transistors on single chip (1970s). Impact: microprocessors, memory density explosion. Moore's Law: observed (not law). Scaling: continued until limits approached. Heat: power density challenges. Future: quantum, photonic computing alternatives."
    },
    {
      "question": "What network architecture standardized communication?",
      "answer": "TCP/IP",
      "alternatives": [
        "Internet Protocol suite"
      ],
      "explanation": "TCP/IP: internet protocol stack (1970s-80s). OSI model: conceptual reference. Dominance: de facto standard (ARPANET adoption). Robustness: designed for unreliable networks. Scalability: accommodates unlimited growth. Standard: RFC documents. Impact: internet enabled this protocol."
    },
    {
      "question": "What database system pioneered data organization?",
      "answer": "Relational database",
      "alternatives": [
        "SQL database"
      ],
      "explanation": "Relational database: Codd's theory (1970). Tables: organize data relationally. SQL: query language standard. ACID: properties guarantee correctness. Dominance: business computing (still). NoSQL: recent alternative. Impact: data management revolution. Enterprise: ubiquitous standard."
    },
    {
      "question": "What algorithm shaped cryptography?",
      "answer": "RSA encryption",
      "alternatives": [
        "Public-key cryptography"
      ],
      "explanation": "RSA: Rivest, Shamir, Adleman (1977). Public-key: two keys (public, private). Security: based on factorization difficulty. Impact: internet security enabled (HTTPS, TLS). Quantum: threatens RSA. Alternative: post-quantum algorithms studied. Legacy: foundational security mechanism."
    },
    {
      "question": "What computer science paradigm revolutionized software?",
      "answer": "Object-oriented programming",
      "alternatives": [
        "OOP"
      ],
      "explanation": "OOP: Simula language (1960s), popularized Smalltalk (1970s), C++ (1983), Java (1995). Concepts: objects, classes, inheritance, polymorphism. Advantages: modularity, reusability, maintainability. Dominance: most popular paradigm. Criticism: complexity, overhead. Impact: shaped modern software development."
    }
  ]
}