{
  "subtopic_id": "oop_basics",
  "subtopic_name": "OOP Basics",
  "questions": [
    {
      "question": "What does OOP stand for?",
      "options": [
        "Object-Oriented Programming",
        "Object-Oriented Process",
        "Operation-Oriented Programming",
        "Organized Object Programming"
      ],
      "correct": 0,
      "explanation": "OOP stands for Object-Oriented Programming, a programming paradigm based on the concept of objects which contain data and code."
    },
    {
      "question": "What is a class in OOP?",
      "options": [
        "A blueprint or template for creating objects",
        "A variable",
        "A function",
        "A data type"
      ],
      "correct": 0,
      "explanation": "A class is a blueprint or template that defines the structure and behavior of objects. It specifies attributes (data) and methods (functions) that objects of that class will have."
    },
    {
      "question": "What is an object in OOP?",
      "options": [
        "An instance of a class",
        "A type of variable",
        "A function",
        "A loop structure"
      ],
      "correct": 0,
      "explanation": "An object is an instance of a class. It is a concrete entity created from the class blueprint, containing actual values for the attributes defined in the class."
    },
    {
      "question": "What are the four main pillars of OOP?",
      "options": [
        "Encapsulation, Inheritance, Polymorphism, Abstraction",
        "Variables, Functions, Classes, Objects",
        "Input, Output, Processing, Storage",
        "Creation, Deletion, Update, Read"
      ],
      "correct": 0,
      "explanation": "The four fundamental principles of OOP are: Encapsulation (data hiding), Inheritance (code reuse), Polymorphism (multiple forms), and Abstraction (hiding complexity)."
    },
    {
      "question": "What is a method in OOP?",
      "options": [
        "A function defined inside a class",
        "A type of variable",
        "A loop",
        "A data structure"
      ],
      "correct": 0,
      "explanation": "A method is a function that is defined inside a class and describes the behaviors or actions that objects of that class can perform."
    },
    {
      "question": "What are attributes in OOP?",
      "options": [
        "Variables that belong to a class or object",
        "Functions in a class",
        "Loop structures",
        "Control statements"
      ],
      "correct": 0,
      "explanation": "Attributes (also called properties or fields) are variables that belong to a class or object, representing the data or state of the object."
    },
    {
      "question": "What is instantiation?",
      "options": [
        "Creating an object from a class",
        "Deleting an object",
        "Defining a class",
        "Calling a method"
      ],
      "correct": 0,
      "explanation": "Instantiation is the process of creating an actual object (instance) from a class definition, typically using a constructor or the 'new' keyword."
    },
    {
      "question": "What is the 'this' keyword used for?",
      "options": [
        "To refer to the current object instance",
        "To create a new object",
        "To delete an object",
        "To define a class"
      ],
      "correct": 0,
      "explanation": "The 'this' keyword refers to the current instance of the class, allowing you to access the object's own attributes and methods within the class."
    },
    {
      "question": "What is a class variable?",
      "options": [
        "A variable shared by all instances of a class",
        "A local variable in a method",
        "A parameter",
        "A constant"
      ],
      "correct": 0,
      "explanation": "A class variable (or static variable) is shared by all instances of a class. Changes to it are reflected across all objects of that class."
    },
    {
      "question": "What is an instance variable?",
      "options": [
        "A variable unique to each object instance",
        "A variable shared by all objects",
        "A global variable",
        "A constant"
      ],
      "correct": 0,
      "explanation": "An instance variable is unique to each object instance. Each object has its own copy of instance variables with potentially different values."
    }
  ]
}