{
  "subtopic_id": "testing",
  "subtopic_name": "Software Testing",
  "mode": "finals",
  "difficulty": "average",
  "questions": [
    {
      "question": "What development approach writes tests before writing the actual code?",
      "answer": "Test-Driven Development",
      "alternatives": ["TDD"],
      "explanation": "TDD follows the Red-Green-Refactor cycle: write a failing test, write code to pass it, then refactor the code while keeping tests passing."
    },
    {
      "question": "What testing approach writes tests based on examples in natural language?",
      "answer": "Behavior-Driven Development",
      "alternatives": ["BDD"],
      "explanation": "BDD uses natural language constructs like Given-When-Then to describe behavior and create tests that are readable by non-technical stakeholders."
    },
    {
      "question": "What metric measures the percentage of code executed by tests?",
      "answer": "Test Coverage",
      "alternatives": ["Code Coverage"],
      "explanation": "Test Coverage quantifies how much of the code is exercised by test cases, often measured as line, branch, or path coverage."
    },
    {
      "question": "What testing technique divides inputs into groups that should behave similarly?",
      "answer": "Equivalence Partitioning",
      "alternatives": ["Equivalence Class Testing"],
      "explanation": "Equivalence Partitioning divides input data into valid and invalid partitions where all values in a partition should be treated identically."
    },
    {
      "question": "What technique tests values at the edges of input boundaries?",
      "answer": "Boundary Value Analysis",
      "alternatives": ["BVA"],
      "explanation": "Boundary Value Analysis tests values at the boundaries between partitions, as errors often occur at these edge cases."
    },
    {
      "question": "What strategy tests each module separately before integration?",
      "answer": "Bottom-up Testing",
      "alternatives": ["Bottom-up Integration"],
      "explanation": "Bottom-up Testing starts with the lowest level modules and progressively integrates and tests higher level modules using test drivers."
    },
    {
      "question": "What are the specific conditions that must be met for a user story to be considered complete?",
      "answer": "Acceptance Criteria",
      "alternatives": [],
      "explanation": "Acceptance Criteria are predefined requirements that must be met for a user story to be accepted, often written in Given-When-Then format."
    },
    {
      "question": "What framework automates browser testing?",
      "answer": "Selenium",
      "alternatives": [],
      "explanation": "Selenium is a popular framework for automating web browser interactions, enabling automated functional testing of web applications."
    },
    {
      "question": "What type of testing verifies security vulnerabilities?",
      "answer": "Penetration Testing",
      "alternatives": ["Pen Testing", "Security Testing"],
      "explanation": "Penetration Testing simulates attacks to identify security vulnerabilities, weaknesses, and potential entry points for malicious actors."
    },
    {
      "question": "What testing evaluates how the system performs under stress conditions?",
      "answer": "Stress Testing",
      "alternatives": [],
      "explanation": "Stress Testing evaluates system behavior under extreme conditions beyond normal operational capacity to identify breaking points."
    }
  ]
}