{
  "subtopic_id": "security_protection",
  "subtopic_name": "Security & Protection",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What access control enforces system-wide mandatory policies?",
      "answer": "MAC",
      "alternatives": ["Mandatory Access Control"],
      "explanation": "MAC enforces centralized security policies users can't override. It's used in high-security environments."
    },
    {
      "question": "What access control lets owners set permissions?",
      "answer": "DAC",
      "alternatives": ["Discretionary Access Control"],
      "explanation": "DAC allows resource owners to control access. It's flexible but can be insecure."
    },
    {
      "question": "What access control uses roles to assign permissions?",
      "answer": "RBAC",
      "alternatives": ["Role-Based Access Control"],
      "explanation": "RBAC assigns permissions through roles. It simplifies administration in large systems."
    },
    {
      "question": "What attack manipulates return addresses?",
      "answer": "Return-oriented programming",
      "alternatives": ["ROP"],
      "explanation": "ROP chains existing code gadgets to bypass DEP. It reuses legitimate instructions maliciously."
    },
    {
      "question": "What technique detects stack corruption?",
      "answer": "Stack canary",
      "alternatives": ["Stack cookie"],
      "explanation": "Stack canaries place values before return addresses. Corruption is detected when values change."
    },
    {
      "question": "What sandbox isolates untrusted code?",
      "answer": "Sandboxing",
      "alternatives": [],
      "explanation": "Sandboxing restricts program capabilities to contain damage. It limits system access."
    },
    {
      "question": "What technique verifies software integrity?",
      "answer": "Code signing",
      "alternatives": [],
      "explanation": "Code signing uses digital signatures to verify authenticity. It ensures code hasn't been tampered with."
    },
    {
      "question": "What SELinux mechanism defines fine-grained policies?",
      "answer": "Type enforcement",
      "alternatives": [],
      "explanation": "Type enforcement assigns types to subjects and objects. It enforces access rules between types."
    },
    {
      "question": "What Chinese Wall model prevents conflicts of interest?",
      "answer": "Brewer-Nash model",
      "alternatives": [],
      "explanation": "Brewer-Nash prevents accessing competing organizations' data. It enforces dynamic separation."
    },
    {
      "question": "What formal method proves security properties?",
      "answer": "Formal verification",
      "alternatives": [],
      "explanation": "Formal verification mathematically proves correctness. It provides strong security guarantees."
    }
  ]
}