{
  "subtopic_id": "relational_model",
  "subtopic_name": "Relational Model",
  "mode": "finals",
  "difficulty": "average",
  "questions": [
    {
      "question": "What is any set of attributes that can uniquely identify tuples called?",
      "answer": "Super Key",
      "alternatives": ["Superkey"],
      "explanation": "A super key is any combination of attributes that uniquely identifies each tuple in a relation."
    },
    {
      "question": "What is a minimal super key with no redundant attributes called?",
      "answer": "Candidate Key",
      "alternatives": [],
      "explanation": "A candidate key is the smallest set of attributes that can uniquely identify tuples."
    },
    {
      "question": "What relational algebra operation selects specific rows based on conditions?",
      "answer": "Select",
      "alternatives": ["Selection"],
      "explanation": "The Select operation filters tuples based on specified predicates or conditions."
    },
    {
      "question": "What relational algebra operation selects specific columns from a relation?",
      "answer": "Project",
      "alternatives": ["Projection"],
      "explanation": "The Project operation extracts specified attributes from a relation, creating a vertical subset."
    },
    {
      "question": "What operation combines two relations with identical structures?",
      "answer": "Union",
      "alternatives": [],
      "explanation": "Union merges tuples from two compatible relations into a single result relation."
    },
    {
      "question": "What operation returns tuples present in one relation but not another?",
      "answer": "Difference",
      "alternatives": ["Set Difference", "Minus"],
      "explanation": "The Difference operation finds tuples that exist in the first relation but not in the second."
    },
    {
      "question": "What operation combines tuples from two relations into all possible pairs?",
      "answer": "Cartesian Product",
      "alternatives": ["Cross Product"],
      "explanation": "Cartesian Product creates all possible combinations of tuples from two relations."
    },
    {
      "question": "What constraint ensures a foreign key value must exist in the referenced table?",
      "answer": "Referential Integrity",
      "alternatives": [],
      "explanation": "Referential integrity maintains consistency between related tables through foreign key constraints."
    },
    {
      "question": "What type of relationship connects multiple entities to multiple entities?",
      "answer": "Many-to-Many",
      "alternatives": ["M:N"],
      "explanation": "Many-to-many relationships allow multiple instances on both sides of the relationship."
    },
    {
      "question": "What constraint prevents NULL values in an attribute?",
      "answer": "NOT NULL",
      "alternatives": ["Not Null Constraint"],
      "explanation": "NOT NULL constraint requires every tuple to have a valid value for that attribute."
    }
  ]
}