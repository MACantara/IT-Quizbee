{
  "subtopic_id": "agile_methodologies",
  "subtopic_name": "Agile Methodologies",
  "mode": "finals",
  "difficulty": "average",
  "questions": [
    {
      "question": "The Scrum artifact containing work selected for the current Sprint.",
      "answer": "Sprint Backlog",
      "alternatives": [],
      "explanation": "The Sprint Backlog is the set of Product Backlog items selected for the Sprint, plus a plan for delivering them.",
      "id": "agi_met_agi_met_a_finals_000"
    },
    {
      "question": "The metric in Agile that measures team productivity based on completed work.",
      "answer": "Velocity",
      "alternatives": [
        "Team Velocity"
      ],
      "explanation": "Velocity measures how much work a team completes in a Sprint, typically in story points or hours.",
      "id": "agi_met_agi_met_a_finals_001"
    },
    {
      "question": "The Agile practice of writing automated tests before writing production code.",
      "answer": "Test-Driven Development",
      "alternatives": [
        "TDD"
      ],
      "explanation": "TDD is a practice where developers write failing tests first, then write code to make the tests pass.",
      "id": "agi_met_agi_met_a_finals_002"
    },
    {
      "question": "The acceptance criteria technique using Given-When-Then format.",
      "answer": "Behavior-Driven Development",
      "alternatives": [
        "BDD"
      ],
      "explanation": "BDD uses scenarios written in Given-When-Then format to specify expected behavior in business terms.",
      "id": "agi_met_agi_met_a_finals_003"
    },
    {
      "question": "The practice of merging code changes frequently into a shared repository.",
      "answer": "Continuous Integration",
      "alternatives": [
        "CI"
      ],
      "explanation": "Continuous Integration involves regularly merging code changes and running automated builds and tests.",
      "id": "agi_met_agi_met_a_finals_004"
    },
    {
      "question": "The Kanban metric measuring average time to complete work items.",
      "answer": "Cycle Time",
      "alternatives": [
        "Lead Time"
      ],
      "explanation": "Cycle Time measures how long it takes to complete a work item from start to finish.",
      "id": "agi_met_agi_met_a_finals_005"
    },
    {
      "question": "The Agile principle of maintaining a sustainable pace of work indefinitely.",
      "answer": "Sustainable Pace",
      "alternatives": [
        "Sustainable Development"
      ],
      "explanation": "Sustainable pace means the team works at a consistent speed that can be maintained long-term without burnout.",
      "id": "agi_met_agi_met_a_finals_006"
    },
    {
      "question": "The Extreme Programming practice of refactoring code to improve design continuously.",
      "answer": "Continuous Refactoring",
      "alternatives": [
        "Refactoring"
      ],
      "explanation": "Continuous refactoring improves code structure incrementally without changing external behavior.",
      "id": "agi_met_agi_met_a_finals_007"
    },
    {
      "question": "The definition that determines when a user story is considered complete.",
      "answer": "Definition of Done",
      "alternatives": [
        "DoD",
        "Done Criteria"
      ],
      "explanation": "Definition of Done is the shared understanding of what it means for work to be complete and releasable.",
      "id": "agi_met_agi_met_a_finals_008"
    },
    {
      "question": "The Kanban policy limiting the number of items in each workflow stage.",
      "answer": "WIP Limit",
      "alternatives": [
        "Work In Progress Limit"
      ],
      "explanation": "WIP limits constrain how many items can be in each column, helping identify bottlenecks and improve flow.",
      "id": "agi_met_agi_met_a_finals_009"
    }
  ]
}