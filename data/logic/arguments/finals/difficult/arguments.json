{
  "subtopic_id": "arguments",
  "subtopic_name": "Arguments & Validity",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What inference rule combines CNF clauses to derive conclusions?",
      "answer": "resolution",
      "alternatives": [
        "resolution rule"
      ],
      "explanation": "Resolution is a complete inference rule for propositional logic in CNF.",
      "id": "argu_argu_d_finals_000"
    },
    {
      "question": "What theorem states that Γ, A ⊢ B implies Γ ⊢ A→B?",
      "answer": "deduction theorem",
      "alternatives": [],
      "explanation": "The deduction theorem relates entailment and implication in formal logic.",
      "id": "argu_argu_d_finals_001"
    },
    {
      "question": "What type of validity requires truth preservation in all models?",
      "answer": "semantic consequence",
      "alternatives": [
        "logical consequence",
        "semantic validity"
      ],
      "explanation": "Semantic consequence is model-theoretic validity, requiring truth in all interpretations.",
      "id": "argu_argu_d_finals_002"
    },
    {
      "question": "What type of validity is based on derivability using inference rules?",
      "answer": "syntactic consequence",
      "alternatives": [
        "provability",
        "syntactic validity"
      ],
      "explanation": "Syntactic consequence is proof-theoretic validity based on formal derivation.",
      "id": "argu_argu_d_finals_003"
    },
    {
      "question": "What property states that every semantically valid formula is provable?",
      "answer": "completeness",
      "alternatives": [
        "semantic completeness"
      ],
      "explanation": "Completeness ensures semantic consequence implies syntactic consequence.",
      "id": "argu_argu_d_finals_004"
    },
    {
      "question": "What property ensures no contradictions can be derived in a system?",
      "answer": "consistency",
      "alternatives": [
        "consistent"
      ],
      "explanation": "A consistent system cannot prove both A and ¬A for any formula A.",
      "id": "argu_argu_d_finals_005"
    },
    {
      "question": "What proof system uses introduction and elimination rules?",
      "answer": "natural deduction",
      "alternatives": [],
      "explanation": "Natural deduction is a structural proof method with rules for introducing and eliminating connectives.",
      "id": "argu_argu_d_finals_006"
    },
    {
      "question": "What Gentzen-style proof system uses sequents?",
      "answer": "sequent calculus",
      "alternatives": [],
      "explanation": "Sequent calculus represents logical arguments as sequents (Γ ⊢ Δ).",
      "id": "argu_argu_d_finals_007"
    },
    {
      "question": "What theorem states that removing the cut rule preserves provability?",
      "answer": "cut elimination",
      "alternatives": [
        "Gentzen's theorem"
      ],
      "explanation": "Cut elimination is a fundamental theorem showing proofs can avoid the cut rule.",
      "id": "argu_argu_d_finals_008"
    },
    {
      "question": "What correspondence links proofs to programs and propositions to types?",
      "answer": "Curry-Howard correspondence",
      "alternatives": [
        "propositions as types",
        "proofs as programs"
      ],
      "explanation": "The Curry-Howard correspondence establishes a deep connection between logic and computation.",
      "id": "argu_argu_d_finals_009"
    }
  ]
}