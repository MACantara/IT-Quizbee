{
  "subtopic_id": "software_fundamentals",
  "subtopic_name": "Software Fundamentals",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What architecture separates software into independent services?",
      "answer": "microservices",
      "alternatives": [
        "microservice architecture"
      ],
      "explanation": "Microservices enable modular application design.",
      "id": "sof_fun_sof_fun_d_finals_000"
    },
    {
      "question": "What software paradigm treats computation as mathematical functions?",
      "answer": "functional programming",
      "alternatives": [],
      "explanation": "Functional programming avoids state changes.",
      "id": "sof_fun_sof_fun_d_finals_001"
    },
    {
      "question": "What practice automates software delivery pipelines?",
      "answer": "CI/CD",
      "alternatives": [
        "Continuous Integration/Continuous Deployment"
      ],
      "explanation": "CI/CD streamlines code deployment.",
      "id": "sof_fun_sof_fun_d_finals_002"
    },
    {
      "question": "What software container platform packages applications?",
      "answer": "Docker",
      "alternatives": [],
      "explanation": "Docker creates portable application containers.",
      "id": "sof_fun_sof_fun_d_finals_003"
    },
    {
      "question": "What manages containerized applications at scale?",
      "answer": "Kubernetes",
      "alternatives": [
        "K8s"
      ],
      "explanation": "Kubernetes orchestrates container deployments.",
      "id": "sof_fun_sof_fun_d_finals_004"
    },
    {
      "question": "What technique optimizes code without changing behavior?",
      "answer": "refactoring",
      "alternatives": [],
      "explanation": "Refactoring improves code structure and maintainability.",
      "id": "sof_fun_sof_fun_d_finals_005"
    },
    {
      "question": "What software design principle promotes loose coupling?",
      "answer": "dependency injection",
      "alternatives": [
        "DI"
      ],
      "explanation": "Dependency injection enhances testability.",
      "id": "sof_fun_sof_fun_d_finals_006"
    },
    {
      "question": "What license requires derivative works to be open source?",
      "answer": "copyleft",
      "alternatives": [],
      "explanation": "Copyleft licenses enforce openness.",
      "id": "sof_fun_sof_fun_d_finals_007"
    },
    {
      "question": "What pattern separates data from presentation?",
      "answer": "MVC",
      "alternatives": [
        "Model-View-Controller"
      ],
      "explanation": "MVC organizes application architecture.",
      "id": "sof_fun_sof_fun_d_finals_008"
    },
    {
      "question": "What methodology develops software in short cycles?",
      "answer": "Scrum",
      "alternatives": [],
      "explanation": "Scrum uses sprints for iterative development.",
      "id": "sof_fun_sof_fun_d_finals_009"
    }
  ]
}