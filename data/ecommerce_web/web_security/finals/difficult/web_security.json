{
  "subtopic_id": "web_security",
  "subtopic_name": "Web Security",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "What enforces strong passwords?",
      "answer": "Password security policy",
      "alternatives": [
        "Password policy"
      ],
      "explanation": "Password policy enforces security standards. Requirements: length (12+ chars), complexity (upper, lower, number, special). Expiration: may require change (now discouraged). Hashing: bcrypt, Argon2 (never plain text). Multi-factor: reduces password importance. Education: users important. Implementation: application-enforced."
    },
    {
      "question": "What prevents brute force?",
      "answer": "Rate limiting",
      "alternatives": [
        "Account lockout"
      ],
      "explanation": "Rate limiting prevents brute force attacks. Methods: limit attempts, progressive delay, account lockout. Implementation: track failed attempts, IP-based, account-based. Balance: block attackers, allow users. Recovery: unlock after time. Alternative: CAPTCHA after attempts. Monitoring: unusual patterns detected."
    },
    {
      "question": "What manages secrets?",
      "answer": "Secret management",
      "alternatives": [
        "Credentials management"
      ],
      "explanation": "Secret management secures sensitive data. Items: API keys, database passwords, private keys. Practices: never hardcode, use environment variables. Tools: Vault, AWS Secrets Manager. Rotation: periodic updates. Access control: least privilege. Encryption: at rest. Auditing: track access. Compliance: often required."
    },
    {
      "question": "What detects threats?",
      "answer": "Security monitoring",
      "alternatives": [
        "Threat detection"
      ],
      "explanation": "Security monitoring tracks system activity. Sources: logs, network traffic, system metrics. Analysis: identify suspicious behavior. Alerting: real-time notifications. Response: investigate, contain threats. Tools: SIEM, EDR, SOC. Automation: rules-based, ML-based. Continuous: 24/7 monitoring. Effectiveness: depends on expertise."
    },
    {
      "question": "What handles compliance?",
      "answer": "Compliance framework",
      "alternatives": [
        "Regulatory compliance"
      ],
      "explanation": "Compliance framework ensures regulatory adherence. Standards: PCI DSS, HIPAA, GDPR, SOC 2. Requirements: vary by industry, data type. Audits: verify compliance. Documentation: evidence of controls. Penalties: non-compliance fines, business impact. Continuous: ongoing maintenance. Investment: significant but necessary."
    },
    {
      "question": "What tests for weaknesses?",
      "answer": "Penetration testing",
      "alternatives": [
        "Security testing"
      ],
      "explanation": "Penetration testing simulates attacks. Scope: systems to test, timeframe. Techniques: network attacks, phishing, social engineering. Reporting: vulnerabilities, recommendations. Frequency: annual minimum, after changes. Expert: requires skilled professionals. Value: identifies real vulnerabilities. Business: justifies security investment."
    },
    {
      "question": "What enables secure architecture?",
      "answer": "Zero-trust security",
      "alternatives": [
        "Zero trust model"
      ],
      "explanation": "Zero-trust assumes all access is risky. Principle: never trust, always verify. Implementation: authentication, authorization for every access. Network: microsegmentation, least privilege. Monitoring: continuous verification. Benefits: reduced breach impact. Challenges: complexity, user friction. Modern: increasingly adopted standard."
    },
    {
      "question": "What secures supply chain?",
      "answer": "Supply chain security",
      "alternatives": [
        "Dependency security"
      ],
      "explanation": "Supply chain security manages third-party risks. Concerns: compromised libraries, malware, vulnerabilities. Controls: code review, dependency scanning, vendor assessment. Tools: SBOM (Software Bill of Materials), dependency scanning. Importance: indirect attack vector. Incident: SolarWinds, Log4j. Proactive: assess before adopting."
    },
    {
      "question": "What implements secure operations?",
      "answer": "Security operations",
      "alternatives": [
        "SecOps"
      ],
      "explanation": "Security operations maintains secure systems. Activities: patching, updates, monitoring, incident response. Teams: security, ops collaboration. Culture: security-first mindset. Automation: reduce manual work. Efficiency: balance security and speed. DevSecOps: integrate security in development. Continuous: ongoing responsibility."
    },
    {
      "question": "What builds security culture?",
      "answer": "Security awareness",
      "alternatives": [
        "Employee training"
      ],
      "explanation": "Security awareness educates users. Content: phishing, passwords, data protection. Training: regular, updated. Consequences: understand risks. Reporting: encourage threat reporting. Leadership: demonstrate commitment. Culture: security everyone's responsibility. Effectiveness: reduces human-caused breaches. Investment: prevention focus."
    }
  ]
}