{
  "subtopic_id": "requirements_engineering",
  "subtopic_name": "Requirements Engineering",
  "questions": [
    {
      "question": "What is requirements engineering?",
      "options": [
        "The process of defining, documenting, and maintaining software requirements",
        "Building hardware",
        "Network configuration",
        "Database design"
      ],
      "correct": 0,
      "explanation": "Requirements engineering is the process of eliciting, analyzing, specifying, validating, and managing the needs and expectations of stakeholders for a software system. It's crucial for project success."
    },
    {
      "question": "What is a functional requirement?",
      "options": [
        "A requirement describing what the system should do (features and functions)",
        "A performance requirement",
        "A hardware requirement",
        "A security requirement"
      ],
      "correct": 0,
      "explanation": "Functional requirements specify what the system should do - its features, functions, and behaviors. Examples: 'The system shall allow users to login with email and password' or 'The system shall calculate tax automatically.'"
    },
    {
      "question": "What is a non-functional requirement?",
      "options": [
        "A requirement specifying quality attributes like performance, security, and usability",
        "A requirement that doesn't work",
        "An optional feature",
        "A bug"
      ],
      "correct": 0,
      "explanation": "Non-functional requirements specify quality attributes and constraints - how well the system performs its functions. Examples: performance (response time), security, usability, reliability, scalability, maintainability."
    },
    {
      "question": "What is requirements elicitation?",
      "options": [
        "The process of gathering requirements from stakeholders",
        "Deleting requirements",
        "Coding requirements",
        "Testing requirements"
      ],
      "correct": 0,
      "explanation": "Requirements elicitation is the practice of collecting requirements from stakeholders through techniques like interviews, surveys, workshops, observation, and prototyping. It's the first step in requirements engineering."
    },
    {
      "question": "What is a use case?",
      "options": [
        "A description of how users interact with the system to achieve a goal",
        "A test case",
        "A database schema",
        "A class diagram"
      ],
      "correct": 0,
      "explanation": "A use case describes a sequence of interactions between a user (actor) and the system to achieve a specific goal. It captures functional requirements from a user's perspective and includes main flow and alternate flows."
    },
    {
      "question": "What is requirements validation?",
      "options": [
        "Checking that requirements correctly define the system stakeholders want",
        "Writing requirements",
        "Coding requirements",
        "Deleting requirements"
      ],
      "correct": 0,
      "explanation": "Requirements validation ensures that the documented requirements accurately reflect stakeholder needs and that they are complete, consistent, feasible, and testable. Techniques include reviews, prototyping, and test case generation."
    },
    {
      "question": "What is requirements traceability?",
      "options": [
        "The ability to track requirements through development and testing phases",
        "Deleting old requirements",
        "Writing new requirements",
        "Requirements ordering"
      ],
      "correct": 0,
      "explanation": "Requirements traceability is the ability to trace requirements from their origin through specification, design, implementation, and testing. It helps manage changes, verify completeness, and ensure all requirements are addressed."
    },
    {
      "question": "What is a Software Requirements Specification (SRS)?",
      "options": [
        "A document detailing all requirements for a software system",
        "A programming manual",
        "A test plan",
        "A user guide"
      ],
      "correct": 0,
      "explanation": "An SRS is a comprehensive document that specifies all functional and non-functional requirements for a software system. It serves as a contract between developers and stakeholders, guiding design and testing."
    },
    {
      "question": "What is requirements prioritization?",
      "options": [
        "Ranking requirements by importance to determine implementation order",
        "Deleting requirements",
        "Writing requirements",
        "Testing requirements"
      ],
      "correct": 0,
      "explanation": "Requirements prioritization ranks requirements based on factors like business value, cost, risk, and stakeholder needs. Techniques include MoSCoW (Must have, Should have, Could have, Won't have) and numerical ranking."
    },
    {
      "question": "What is requirements volatility?",
      "options": [
        "The rate at which requirements change during development",
        "Requirements stability",
        "Requirements deletion",
        "Requirements completion"
      ],
      "correct": 0,
      "explanation": "Requirements volatility refers to how frequently requirements change during the development process. High volatility increases project risk and cost. Agile methods accommodate volatility better than traditional approaches."
    }
  ],
  "mode": "elimination"
}