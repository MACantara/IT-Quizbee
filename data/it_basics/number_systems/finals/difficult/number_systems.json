{
  "subtopic_id": "number_systems",
  "subtopic_name": "Number Systems",
  "mode": "finals",
  "difficulty": "difficult",
  "questions": [
    {
      "question": "Character encoding standard supporting multiple languages with variable-length encoding.",
      "answer": "UTF-8",
      "alternatives": [],
      "explanation": "UTF-8 encodes Unicode characters using 1 to 4 bytes.",
      "id": "num_sys_num_sys_d_finals_000"
    },
    {
      "question": "Representation of numbers that includes both magnitude and an exponent.",
      "answer": "Floating-point",
      "alternatives": [],
      "explanation": "Floating-point notation represents real numbers with fractional parts.",
      "id": "num_sys_num_sys_d_finals_001"
    },
    {
      "question": "IEEE standard for floating-point arithmetic widely used in computing.",
      "answer": "IEEE 754",
      "alternatives": [],
      "explanation": "IEEE 754 defines binary and decimal floating-point formats.",
      "id": "num_sys_num_sys_d_finals_002"
    },
    {
      "question": "Error detection code adding a bit to ensure even or odd number of 1s.",
      "answer": "Parity bit",
      "alternatives": [],
      "explanation": "Parity bits detect single-bit errors in data transmission.",
      "id": "num_sys_num_sys_d_finals_003"
    },
    {
      "question": "Code where consecutive values differ by only one bit.",
      "answer": "Gray code",
      "alternatives": [],
      "explanation": "Gray code minimizes errors during transitions between values.",
      "id": "num_sys_num_sys_d_finals_004"
    },
    {
      "question": "Excess representation adding a bias to signed numbers.",
      "answer": "Excess-N",
      "alternatives": [
        "Biased notation"
      ],
      "explanation": "Excess-N adds a constant bias to represent signed values.",
      "id": "num_sys_num_sys_d_finals_005"
    },
    {
      "question": "Fixed-point representation with bits reserved for fractional part.",
      "answer": "Q format",
      "alternatives": [],
      "explanation": "Q format allocates a fixed number of bits for integer and fractional parts.",
      "id": "num_sys_num_sys_d_finals_006"
    },
    {
      "question": "The special value in floating-point representing division by zero.",
      "answer": "Infinity",
      "alternatives": [],
      "explanation": "Floating-point standards define positive and negative infinity.",
      "id": "num_sys_num_sys_d_finals_007"
    },
    {
      "question": "Special floating-point value for undefined operations.",
      "answer": "NaN",
      "alternatives": [
        "Not a Number"
      ],
      "explanation": "NaN represents results like 0/0 or square root of negative numbers.",
      "id": "num_sys_num_sys_d_finals_008"
    },
    {
      "question": "Method of storing the smallest addressable unit at the lowest memory address.",
      "answer": "Little-endian",
      "alternatives": [],
      "explanation": "Little-endian stores the least significant byte at the lowest address.",
      "id": "num_sys_num_sys_d_finals_009"
    }
  ]
}